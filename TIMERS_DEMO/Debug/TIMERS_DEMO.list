
TIMERS_DEMO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001dc  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000374  0800037c  0001037c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000374  08000374  0001037c  2**0
                  CONTENTS
  4 .ARM          00000000  08000374  08000374  0001037c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000374  0800037c  0001037c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000374  08000374  00010374  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000378  08000378  00010378  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001037c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800037c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800037c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001037c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a0b  00000000  00000000  000103ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001ef  00000000  00000000  00010db7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00010fa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  00011020  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000141cc  00000000  00000000  00011070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e70  00000000  00000000  0002523c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00084bd8  00000000  00000000  000260ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000aac84  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000d0  00000000  00000000  000aacd4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800035c 	.word	0x0800035c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800035c 	.word	0x0800035c

080001d8 <timer_delay>:
 *  Created on: Nov 30, 2022
 *      Author: PHY202209EF06
 */
#include"main.h"
void timer_delay()
{
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= 0x20000;
 80001dc:	4b18      	ldr	r3, [pc, #96]	; (8000240 <timer_delay+0x68>)
 80001de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80001e0:	4a17      	ldr	r2, [pc, #92]	; (8000240 <timer_delay+0x68>)
 80001e2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80001e6:	6453      	str	r3, [r2, #68]	; 0x44
	GPIOB->MODER |= 0x20000;
 80001e8:	4b16      	ldr	r3, [pc, #88]	; (8000244 <timer_delay+0x6c>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	4a15      	ldr	r2, [pc, #84]	; (8000244 <timer_delay+0x6c>)
 80001ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80001f2:	6013      	str	r3, [r2, #0]
	GPIOB->AFR[1] |= 0x3;
 80001f4:	4b13      	ldr	r3, [pc, #76]	; (8000244 <timer_delay+0x6c>)
 80001f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80001f8:	4a12      	ldr	r2, [pc, #72]	; (8000244 <timer_delay+0x6c>)
 80001fa:	f043 0303 	orr.w	r3, r3, #3
 80001fe:	6253      	str	r3, [r2, #36]	; 0x24
	TIM10->PSC |= 15999-1;
 8000200:	4b11      	ldr	r3, [pc, #68]	; (8000248 <timer_delay+0x70>)
 8000202:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000204:	4a10      	ldr	r2, [pc, #64]	; (8000248 <timer_delay+0x70>)
 8000206:	f443 5379 	orr.w	r3, r3, #15936	; 0x3e40
 800020a:	f043 033e 	orr.w	r3, r3, #62	; 0x3e
 800020e:	6293      	str	r3, [r2, #40]	; 0x28
	TIM10->ARR |= 1000-1;
 8000210:	4b0d      	ldr	r3, [pc, #52]	; (8000248 <timer_delay+0x70>)
 8000212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000214:	4a0c      	ldr	r2, [pc, #48]	; (8000248 <timer_delay+0x70>)
 8000216:	f443 7379 	orr.w	r3, r3, #996	; 0x3e4
 800021a:	f043 0303 	orr.w	r3, r3, #3
 800021e:	62d3      	str	r3, [r2, #44]	; 0x2c
	TIM10->CNT |= 0x0;
 8000220:	4b09      	ldr	r3, [pc, #36]	; (8000248 <timer_delay+0x70>)
 8000222:	4a09      	ldr	r2, [pc, #36]	; (8000248 <timer_delay+0x70>)
 8000224:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000226:	6253      	str	r3, [r2, #36]	; 0x24
	TIM10->CR1 |= 0x1;
 8000228:	4b07      	ldr	r3, [pc, #28]	; (8000248 <timer_delay+0x70>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a06      	ldr	r2, [pc, #24]	; (8000248 <timer_delay+0x70>)
 800022e:	f043 0301 	orr.w	r3, r3, #1
 8000232:	6013      	str	r3, [r2, #0]
}
 8000234:	bf00      	nop
 8000236:	46bd      	mov	sp, r7
 8000238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop
 8000240:	40023800 	.word	0x40023800
 8000244:	40020400 	.word	0x40020400
 8000248:	40014400 	.word	0x40014400

0800024c <main>:

int main()
{
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
	/*ENABLE  GPIO*/
	RCC->AHB1ENR |= 0x3;
 8000250:	4b0f      	ldr	r3, [pc, #60]	; (8000290 <main+0x44>)
 8000252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000254:	4a0e      	ldr	r2, [pc, #56]	; (8000290 <main+0x44>)
 8000256:	f043 0303 	orr.w	r3, r3, #3
 800025a:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER |= 0x400;
 800025c:	4b0d      	ldr	r3, [pc, #52]	; (8000294 <main+0x48>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a0c      	ldr	r2, [pc, #48]	; (8000294 <main+0x48>)
 8000262:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000266:	6013      	str	r3, [r2, #0]
	timer_delay();
 8000268:	f7ff ffb6 	bl	80001d8 <timer_delay>
	while(1)
	{
		while(!(TIM10->SR & 1));
 800026c:	bf00      	nop
 800026e:	4b0a      	ldr	r3, [pc, #40]	; (8000298 <main+0x4c>)
 8000270:	691b      	ldr	r3, [r3, #16]
 8000272:	f003 0301 	and.w	r3, r3, #1
 8000276:	2b00      	cmp	r3, #0
 8000278:	d0f9      	beq.n	800026e <main+0x22>
		GPIOA->ODR ^= 0x20;
 800027a:	4b06      	ldr	r3, [pc, #24]	; (8000294 <main+0x48>)
 800027c:	695b      	ldr	r3, [r3, #20]
 800027e:	4a05      	ldr	r2, [pc, #20]	; (8000294 <main+0x48>)
 8000280:	f083 0320 	eor.w	r3, r3, #32
 8000284:	6153      	str	r3, [r2, #20]
		TIM10->SR |= 0x0;
 8000286:	4b04      	ldr	r3, [pc, #16]	; (8000298 <main+0x4c>)
 8000288:	4a03      	ldr	r2, [pc, #12]	; (8000298 <main+0x4c>)
 800028a:	691b      	ldr	r3, [r3, #16]
 800028c:	6113      	str	r3, [r2, #16]
		while(!(TIM10->SR & 1));
 800028e:	e7ed      	b.n	800026c <main+0x20>
 8000290:	40023800 	.word	0x40023800
 8000294:	40020000 	.word	0x40020000
 8000298:	40014400 	.word	0x40014400

0800029c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800029c:	b480      	push	{r7}
 800029e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002a0:	4b06      	ldr	r3, [pc, #24]	; (80002bc <SystemInit+0x20>)
 80002a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80002a6:	4a05      	ldr	r2, [pc, #20]	; (80002bc <SystemInit+0x20>)
 80002a8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80002ac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80002b0:	bf00      	nop
 80002b2:	46bd      	mov	sp, r7
 80002b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b8:	4770      	bx	lr
 80002ba:	bf00      	nop
 80002bc:	e000ed00 	.word	0xe000ed00

080002c0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80002c0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002f8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002c4:	480d      	ldr	r0, [pc, #52]	; (80002fc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80002c6:	490e      	ldr	r1, [pc, #56]	; (8000300 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80002c8:	4a0e      	ldr	r2, [pc, #56]	; (8000304 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002cc:	e002      	b.n	80002d4 <LoopCopyDataInit>

080002ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d2:	3304      	adds	r3, #4

080002d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d8:	d3f9      	bcc.n	80002ce <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002da:	4a0b      	ldr	r2, [pc, #44]	; (8000308 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80002dc:	4c0b      	ldr	r4, [pc, #44]	; (800030c <LoopFillZerobss+0x26>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e0:	e001      	b.n	80002e6 <LoopFillZerobss>

080002e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e4:	3204      	adds	r2, #4

080002e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e8:	d3fb      	bcc.n	80002e2 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80002ea:	f7ff ffd7 	bl	800029c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002ee:	f000 f811 	bl	8000314 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002f2:	f7ff ffab 	bl	800024c <main>
  bx  lr    
 80002f6:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	0800037c 	.word	0x0800037c
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <__libc_init_array>:
 8000314:	b570      	push	{r4, r5, r6, lr}
 8000316:	4d0d      	ldr	r5, [pc, #52]	; (800034c <__libc_init_array+0x38>)
 8000318:	4c0d      	ldr	r4, [pc, #52]	; (8000350 <__libc_init_array+0x3c>)
 800031a:	1b64      	subs	r4, r4, r5
 800031c:	10a4      	asrs	r4, r4, #2
 800031e:	2600      	movs	r6, #0
 8000320:	42a6      	cmp	r6, r4
 8000322:	d109      	bne.n	8000338 <__libc_init_array+0x24>
 8000324:	4d0b      	ldr	r5, [pc, #44]	; (8000354 <__libc_init_array+0x40>)
 8000326:	4c0c      	ldr	r4, [pc, #48]	; (8000358 <__libc_init_array+0x44>)
 8000328:	f000 f818 	bl	800035c <_init>
 800032c:	1b64      	subs	r4, r4, r5
 800032e:	10a4      	asrs	r4, r4, #2
 8000330:	2600      	movs	r6, #0
 8000332:	42a6      	cmp	r6, r4
 8000334:	d105      	bne.n	8000342 <__libc_init_array+0x2e>
 8000336:	bd70      	pop	{r4, r5, r6, pc}
 8000338:	f855 3b04 	ldr.w	r3, [r5], #4
 800033c:	4798      	blx	r3
 800033e:	3601      	adds	r6, #1
 8000340:	e7ee      	b.n	8000320 <__libc_init_array+0xc>
 8000342:	f855 3b04 	ldr.w	r3, [r5], #4
 8000346:	4798      	blx	r3
 8000348:	3601      	adds	r6, #1
 800034a:	e7f2      	b.n	8000332 <__libc_init_array+0x1e>
 800034c:	08000374 	.word	0x08000374
 8000350:	08000374 	.word	0x08000374
 8000354:	08000374 	.word	0x08000374
 8000358:	08000378 	.word	0x08000378

0800035c <_init>:
 800035c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035e:	bf00      	nop
 8000360:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000362:	bc08      	pop	{r3}
 8000364:	469e      	mov	lr, r3
 8000366:	4770      	bx	lr

08000368 <_fini>:
 8000368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036a:	bf00      	nop
 800036c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036e:	bc08      	pop	{r3}
 8000370:	469e      	mov	lr, r3
 8000372:	4770      	bx	lr
