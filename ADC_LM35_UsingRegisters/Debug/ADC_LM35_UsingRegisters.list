
ADC_LM35_UsingRegisters.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001d10  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  08001eb0  08001eb0  00011eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001f60  08001f60  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001f60  08001f60  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001f60  08001f60  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001f60  08001f60  00011f60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001f64  08001f64  00011f64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001f68  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001fcc  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001fcc  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001404  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000056d  00000000  00000000  00021498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000178  00000000  00000000  00021a08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000130  00000000  00000000  00021b80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016205  00000000  00000000  00021cb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001e80  00000000  00000000  00037eb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008e913  00000000  00000000  00039d35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000c8648  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000da0  00000000  00000000  000c8698  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001e98 	.word	0x08001e98

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001e98 	.word	0x08001e98

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>
 8000a1c:	0000      	movs	r0, r0
	...

08000a20 <main>:
void LCD_init(void);
void PORTS_init(void);
void LCD_string(char []);

int main (void)
{
 8000a20:	b590      	push	{r4, r7, lr}
 8000a22:	b08d      	sub	sp, #52	; 0x34
 8000a24:	af00      	add	r7, sp, #0
	uint32_t result;
	double temp=0;
 8000a26:	f04f 0200 	mov.w	r2, #0
 8000a2a:	f04f 0300 	mov.w	r3, #0
 8000a2e:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
	uint8_t MSG[16] = {0};
 8000a32:	2300      	movs	r3, #0
 8000a34:	617b      	str	r3, [r7, #20]
 8000a36:	f107 0318 	add.w	r3, r7, #24
 8000a3a:	2200      	movs	r2, #0
 8000a3c:	601a      	str	r2, [r3, #0]
 8000a3e:	605a      	str	r2, [r3, #4]
 8000a40:	609a      	str	r2, [r3, #8]
	LCD_init();
 8000a42:	f000 f89b 	bl	8000b7c <LCD_init>
	delay(10);
 8000a46:	200a      	movs	r0, #10
 8000a48:	f000 f969 	bl	8000d1e <delay>
	LCD_command(0x80);
 8000a4c:	2080      	movs	r0, #128	; 0x80
 8000a4e:	f000 f929 	bl	8000ca4 <LCD_command>
	char str1[]={"Temperature IS:"};
 8000a52:	4b25      	ldr	r3, [pc, #148]	; (8000ae8 <main+0xc8>)
 8000a54:	1d3c      	adds	r4, r7, #4
 8000a56:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000a58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	LCD_string(str1);
 8000a5c:	1d3b      	adds	r3, r7, #4
 8000a5e:	4618      	mov	r0, r3
 8000a60:	f000 f870 	bl	8000b44 <LCD_string>
	ADC_Init();
 8000a64:	f000 f848 	bl	8000af8 <ADC_Init>


	while (1)
	{
		ADC1->CR2 |= (1<<30); 		/* start a conversion */
 8000a68:	4b20      	ldr	r3, [pc, #128]	; (8000aec <main+0xcc>)
 8000a6a:	689b      	ldr	r3, [r3, #8]
 8000a6c:	4a1f      	ldr	r2, [pc, #124]	; (8000aec <main+0xcc>)
 8000a6e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000a72:	6093      	str	r3, [r2, #8]
		while(!(ADC1->SR & 2)) {} 		/* wait for conv complete */
 8000a74:	bf00      	nop
 8000a76:	4b1d      	ldr	r3, [pc, #116]	; (8000aec <main+0xcc>)
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	f003 0302 	and.w	r3, r3, #2
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	d0f9      	beq.n	8000a76 <main+0x56>
		result = ADC1->DR; 				/* read conversion result */
 8000a82:	4b1a      	ldr	r3, [pc, #104]	; (8000aec <main+0xcc>)
 8000a84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000a86:	627b      	str	r3, [r7, #36]	; 0x24
		temp = (double)result / 4096 * 330;
 8000a88:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000a8a:	f7ff fd3b 	bl	8000504 <__aeabi_ui2d>
 8000a8e:	f04f 0200 	mov.w	r2, #0
 8000a92:	4b17      	ldr	r3, [pc, #92]	; (8000af0 <main+0xd0>)
 8000a94:	f7ff feda 	bl	800084c <__aeabi_ddiv>
 8000a98:	4602      	mov	r2, r0
 8000a9a:	460b      	mov	r3, r1
 8000a9c:	4610      	mov	r0, r2
 8000a9e:	4619      	mov	r1, r3
 8000aa0:	a30f      	add	r3, pc, #60	; (adr r3, 8000ae0 <main+0xc0>)
 8000aa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000aa6:	f7ff fda7 	bl	80005f8 <__aeabi_dmul>
 8000aaa:	4602      	mov	r2, r0
 8000aac:	460b      	mov	r3, r1
 8000aae:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
		printf(MSG, "%.3f C", temp);
 8000ab2:	f107 0014 	add.w	r0, r7, #20
 8000ab6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8000aba:	490e      	ldr	r1, [pc, #56]	; (8000af4 <main+0xd4>)
 8000abc:	f000 fa5e 	bl	8000f7c <iprintf>
		LCD_command(0xc0);
 8000ac0:	20c0      	movs	r0, #192	; 0xc0
 8000ac2:	f000 f8ef 	bl	8000ca4 <LCD_command>
		LCD_string(MSG);
 8000ac6:	f107 0314 	add.w	r3, r7, #20
 8000aca:	4618      	mov	r0, r3
 8000acc:	f000 f83a 	bl	8000b44 <LCD_string>
		delay(500);
 8000ad0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000ad4:	f000 f923 	bl	8000d1e <delay>
		ADC1->CR2 |= (1<<30); 		/* start a conversion */
 8000ad8:	e7c6      	b.n	8000a68 <main+0x48>
 8000ada:	bf00      	nop
 8000adc:	f3af 8000 	nop.w
 8000ae0:	00000000 	.word	0x00000000
 8000ae4:	4074a000 	.word	0x4074a000
 8000ae8:	08001eb8 	.word	0x08001eb8
 8000aec:	40012000 	.word	0x40012000
 8000af0:	40b00000 	.word	0x40b00000
 8000af4:	08001eb0 	.word	0x08001eb0

08000af8 <ADC_Init>:

	}
}

void ADC_Init(void)
{
 8000af8:	b480      	push	{r7}
 8000afa:	af00      	add	r7, sp, #0

		/* set up pin PA1 for analog input */
		RCC->AHB1ENR |= 1; 					/* enable GPIOA clock */
 8000afc:	4b0e      	ldr	r3, [pc, #56]	; (8000b38 <ADC_Init+0x40>)
 8000afe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b00:	4a0d      	ldr	r2, [pc, #52]	; (8000b38 <ADC_Init+0x40>)
 8000b02:	f043 0301 	orr.w	r3, r3, #1
 8000b06:	6313      	str	r3, [r2, #48]	; 0x30
		GPIOA->MODER |= 0xC; 				/* PA1 analog */
 8000b08:	4b0c      	ldr	r3, [pc, #48]	; (8000b3c <ADC_Init+0x44>)
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	4a0b      	ldr	r2, [pc, #44]	; (8000b3c <ADC_Init+0x44>)
 8000b0e:	f043 030c 	orr.w	r3, r3, #12
 8000b12:	6013      	str	r3, [r2, #0]

		/* setup ADC1 */
		RCC->APB2ENR |= 0x100; 		/* enable ADC1 clock */
 8000b14:	4b08      	ldr	r3, [pc, #32]	; (8000b38 <ADC_Init+0x40>)
 8000b16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b18:	4a07      	ldr	r2, [pc, #28]	; (8000b38 <ADC_Init+0x40>)
 8000b1a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000b1e:	6453      	str	r3, [r2, #68]	; 0x44
		ADC1->CR2 |= 3; 					/* enable ADC1 */
 8000b20:	4b07      	ldr	r3, [pc, #28]	; (8000b40 <ADC_Init+0x48>)
 8000b22:	689b      	ldr	r3, [r3, #8]
 8000b24:	4a06      	ldr	r2, [pc, #24]	; (8000b40 <ADC_Init+0x48>)
 8000b26:	f043 0303 	orr.w	r3, r3, #3
 8000b2a:	6093      	str	r3, [r2, #8]
}
 8000b2c:	bf00      	nop
 8000b2e:	46bd      	mov	sp, r7
 8000b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b34:	4770      	bx	lr
 8000b36:	bf00      	nop
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40020000 	.word	0x40020000
 8000b40:	40012000 	.word	0x40012000

08000b44 <LCD_string>:

void LCD_string(char str[])
{
 8000b44:	b580      	push	{r7, lr}
 8000b46:	b084      	sub	sp, #16
 8000b48:	af00      	add	r7, sp, #0
 8000b4a:	6078      	str	r0, [r7, #4]
	for(int i=0;str[i]!='\0';i++)
 8000b4c:	2300      	movs	r3, #0
 8000b4e:	60fb      	str	r3, [r7, #12]
 8000b50:	e009      	b.n	8000b66 <LCD_string+0x22>
	{
		LCD_data(str[i]);
 8000b52:	68fb      	ldr	r3, [r7, #12]
 8000b54:	687a      	ldr	r2, [r7, #4]
 8000b56:	4413      	add	r3, r2
 8000b58:	781b      	ldrb	r3, [r3, #0]
 8000b5a:	4618      	mov	r0, r3
 8000b5c:	f000 f8c4 	bl	8000ce8 <LCD_data>
	for(int i=0;str[i]!='\0';i++)
 8000b60:	68fb      	ldr	r3, [r7, #12]
 8000b62:	3301      	adds	r3, #1
 8000b64:	60fb      	str	r3, [r7, #12]
 8000b66:	68fb      	ldr	r3, [r7, #12]
 8000b68:	687a      	ldr	r2, [r7, #4]
 8000b6a:	4413      	add	r3, r2
 8000b6c:	781b      	ldrb	r3, [r3, #0]
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	d1ef      	bne.n	8000b52 <LCD_string+0xe>
	}

}
 8000b72:	bf00      	nop
 8000b74:	bf00      	nop
 8000b76:	3710      	adds	r7, #16
 8000b78:	46bd      	mov	sp, r7
 8000b7a:	bd80      	pop	{r7, pc}

08000b7c <LCD_init>:
/* initialize GPIOA/C then initialize LCD controller */
void LCD_init(void)
{
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	af00      	add	r7, sp, #0
	PORTS_init();
 8000b80:	f000 f82e 	bl	8000be0 <PORTS_init>
	delay(20); /* LCD controller reset sequence */
 8000b84:	2014      	movs	r0, #20
 8000b86:	f000 f8ca 	bl	8000d1e <delay>
	LCD_nibble_write(0x30, 0);
 8000b8a:	2100      	movs	r1, #0
 8000b8c:	2030      	movs	r0, #48	; 0x30
 8000b8e:	f000 f859 	bl	8000c44 <LCD_nibble_write>
	delay(5);
 8000b92:	2005      	movs	r0, #5
 8000b94:	f000 f8c3 	bl	8000d1e <delay>
	LCD_nibble_write(0x30, 0);
 8000b98:	2100      	movs	r1, #0
 8000b9a:	2030      	movs	r0, #48	; 0x30
 8000b9c:	f000 f852 	bl	8000c44 <LCD_nibble_write>
	delay(1);
 8000ba0:	2001      	movs	r0, #1
 8000ba2:	f000 f8bc 	bl	8000d1e <delay>
	LCD_nibble_write(0x30, 0);
 8000ba6:	2100      	movs	r1, #0
 8000ba8:	2030      	movs	r0, #48	; 0x30
 8000baa:	f000 f84b 	bl	8000c44 <LCD_nibble_write>
	delay(1);
 8000bae:	2001      	movs	r0, #1
 8000bb0:	f000 f8b5 	bl	8000d1e <delay>
	LCD_nibble_write(0x20, 0); /* use 4-bit data mode */
 8000bb4:	2100      	movs	r1, #0
 8000bb6:	2020      	movs	r0, #32
 8000bb8:	f000 f844 	bl	8000c44 <LCD_nibble_write>
	delay(1);
 8000bbc:	2001      	movs	r0, #1
 8000bbe:	f000 f8ae 	bl	8000d1e <delay>
	LCD_command(0x28); /* set 4-bit data, 2-line, 5x7 font */
 8000bc2:	2028      	movs	r0, #40	; 0x28
 8000bc4:	f000 f86e 	bl	8000ca4 <LCD_command>
	LCD_command(0x06); /* move cursor right */
 8000bc8:	2006      	movs	r0, #6
 8000bca:	f000 f86b 	bl	8000ca4 <LCD_command>
	LCD_command(0x01); /* clear screen, move cursor to home */
 8000bce:	2001      	movs	r0, #1
 8000bd0:	f000 f868 	bl	8000ca4 <LCD_command>
	LCD_command(0x0F); /* turn on display, cursor blinking */
 8000bd4:	200f      	movs	r0, #15
 8000bd6:	f000 f865 	bl	8000ca4 <LCD_command>
}
 8000bda:	bf00      	nop
 8000bdc:	bd80      	pop	{r7, pc}
	...

08000be0 <PORTS_init>:

void PORTS_init(void)
{
 8000be0:	b480      	push	{r7}
 8000be2:	af00      	add	r7, sp, #0
		RCC->AHB1ENR |= 0x1;                     // Enable AHB1 BUS which is connected to PA5 via GPIO port A
 8000be4:	4b14      	ldr	r3, [pc, #80]	; (8000c38 <PORTS_init+0x58>)
 8000be6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000be8:	4a13      	ldr	r2, [pc, #76]	; (8000c38 <PORTS_init+0x58>)
 8000bea:	f043 0301 	orr.w	r3, r3, #1
 8000bee:	6313      	str	r3, [r2, #48]	; 0x30
		RCC->AHB1ENR |= 0x4;					// Enanle AHB1 bus conneted to GPIO port C
 8000bf0:	4b11      	ldr	r3, [pc, #68]	; (8000c38 <PORTS_init+0x58>)
 8000bf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bf4:	4a10      	ldr	r2, [pc, #64]	; (8000c38 <PORTS_init+0x58>)
 8000bf6:	f043 0304 	orr.w	r3, r3, #4
 8000bfa:	6313      	str	r3, [r2, #48]	; 0x30
	//	RCC->AHB1ENR |=0x2;						//Enanle AHB1 bus conneted to GPIO port B
		GPIOA->MODER &=~((3<<10) | (3<<14)); //0xCC00                //clear all pin PA5 PA6 PA7
 8000bfc:	4b0f      	ldr	r3, [pc, #60]	; (8000c3c <PORTS_init+0x5c>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	4a0e      	ldr	r2, [pc, #56]	; (8000c3c <PORTS_init+0x5c>)
 8000c02:	f423 434c 	bic.w	r3, r3, #52224	; 0xcc00
 8000c06:	6013      	str	r3, [r2, #0]
		GPIOA->MODER |=0x4400; 				//set all pin 5,6,7 as o/p mode
 8000c08:	4b0c      	ldr	r3, [pc, #48]	; (8000c3c <PORTS_init+0x5c>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	4a0b      	ldr	r2, [pc, #44]	; (8000c3c <PORTS_init+0x5c>)
 8000c0e:	f443 4388 	orr.w	r3, r3, #17408	; 0x4400
 8000c12:	6013      	str	r3, [r2, #0]
	//	GPIOA->BSRR = 0xC00000;	//(3<<22)			//turn off EN and RW pin
		GPIOC->MODER &=~0xFF00;				// CLEAR all pin 4-7 of port C
 8000c14:	4b0a      	ldr	r3, [pc, #40]	; (8000c40 <PORTS_init+0x60>)
 8000c16:	681b      	ldr	r3, [r3, #0]
 8000c18:	4a09      	ldr	r2, [pc, #36]	; (8000c40 <PORTS_init+0x60>)
 8000c1a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000c1e:	6013      	str	r3, [r2, #0]
		GPIOC->MODER |= 0x5500;				// set all pin 4-7 as o/p mode
 8000c20:	4b07      	ldr	r3, [pc, #28]	; (8000c40 <PORTS_init+0x60>)
 8000c22:	681b      	ldr	r3, [r3, #0]
 8000c24:	4a06      	ldr	r2, [pc, #24]	; (8000c40 <PORTS_init+0x60>)
 8000c26:	f443 43aa 	orr.w	r3, r3, #21760	; 0x5500
 8000c2a:	6013      	str	r3, [r2, #0]


}
 8000c2c:	bf00      	nop
 8000c2e:	46bd      	mov	sp, r7
 8000c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c34:	4770      	bx	lr
 8000c36:	bf00      	nop
 8000c38:	40023800 	.word	0x40023800
 8000c3c:	40020000 	.word	0x40020000
 8000c40:	40020800 	.word	0x40020800

08000c44 <LCD_nibble_write>:

void LCD_nibble_write(char data, unsigned char control)
{
 8000c44:	b580      	push	{r7, lr}
 8000c46:	b082      	sub	sp, #8
 8000c48:	af00      	add	r7, sp, #0
 8000c4a:	4603      	mov	r3, r0
 8000c4c:	460a      	mov	r2, r1
 8000c4e:	71fb      	strb	r3, [r7, #7]
 8000c50:	4613      	mov	r3, r2
 8000c52:	71bb      	strb	r3, [r7, #6]
	/*populate data bits */
	GPIOC->BSRR = 0xF00000; 					/* reset the PC4-PC7 data bits */
 8000c54:	4b11      	ldr	r3, [pc, #68]	; (8000c9c <LCD_nibble_write+0x58>)
 8000c56:	f44f 0270 	mov.w	r2, #15728640	; 0xf00000
 8000c5a:	619a      	str	r2, [r3, #24]
	GPIOC->BSRR = data & 0xF0; 					/* set data bits 4-7 */
 8000c5c:	79fb      	ldrb	r3, [r7, #7]
 8000c5e:	4a0f      	ldr	r2, [pc, #60]	; (8000c9c <LCD_nibble_write+0x58>)
 8000c60:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000c64:	6193      	str	r3, [r2, #24]
	/* set R/S bit */
	if (control & RS)
 8000c66:	79bb      	ldrb	r3, [r7, #6]
 8000c68:	f003 0320 	and.w	r3, r3, #32
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	d003      	beq.n	8000c78 <LCD_nibble_write+0x34>
		GPIOA->BSRR = RS;
 8000c70:	4b0b      	ldr	r3, [pc, #44]	; (8000ca0 <LCD_nibble_write+0x5c>)
 8000c72:	2220      	movs	r2, #32
 8000c74:	619a      	str	r2, [r3, #24]
 8000c76:	e003      	b.n	8000c80 <LCD_nibble_write+0x3c>
	else
		GPIOA->BSRR = RS << 16;	//(1<<21)  //
 8000c78:	4b09      	ldr	r3, [pc, #36]	; (8000ca0 <LCD_nibble_write+0x5c>)
 8000c7a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8000c7e:	619a      	str	r2, [r3, #24]
	/* pulse E */
	GPIOA->BSRR = EN;
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <LCD_nibble_write+0x5c>)
 8000c82:	2280      	movs	r2, #128	; 0x80
 8000c84:	619a      	str	r2, [r3, #24]
	delay(0);
 8000c86:	2000      	movs	r0, #0
 8000c88:	f000 f849 	bl	8000d1e <delay>
	GPIOA->BSRR = EN << 16;
 8000c8c:	4b04      	ldr	r3, [pc, #16]	; (8000ca0 <LCD_nibble_write+0x5c>)
 8000c8e:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8000c92:	619a      	str	r2, [r3, #24]
}
 8000c94:	bf00      	nop
 8000c96:	3708      	adds	r7, #8
 8000c98:	46bd      	mov	sp, r7
 8000c9a:	bd80      	pop	{r7, pc}
 8000c9c:	40020800 	.word	0x40020800
 8000ca0:	40020000 	.word	0x40020000

08000ca4 <LCD_command>:
void LCD_command(unsigned char command)
{
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b082      	sub	sp, #8
 8000ca8:	af00      	add	r7, sp, #0
 8000caa:	4603      	mov	r3, r0
 8000cac:	71fb      	strb	r3, [r7, #7]
	LCD_nibble_write(command & 0xF0, 0); 			/* upper nibble first */
 8000cae:	79fb      	ldrb	r3, [r7, #7]
 8000cb0:	f023 030f 	bic.w	r3, r3, #15
 8000cb4:	b2db      	uxtb	r3, r3
 8000cb6:	2100      	movs	r1, #0
 8000cb8:	4618      	mov	r0, r3
 8000cba:	f7ff ffc3 	bl	8000c44 <LCD_nibble_write>
	LCD_nibble_write(command << 4, 0); 				/* then lower nibble */
 8000cbe:	79fb      	ldrb	r3, [r7, #7]
 8000cc0:	011b      	lsls	r3, r3, #4
 8000cc2:	b2db      	uxtb	r3, r3
 8000cc4:	2100      	movs	r1, #0
 8000cc6:	4618      	mov	r0, r3
 8000cc8:	f7ff ffbc 	bl	8000c44 <LCD_nibble_write>
	if (command < 4)
 8000ccc:	79fb      	ldrb	r3, [r7, #7]
 8000cce:	2b03      	cmp	r3, #3
 8000cd0:	d803      	bhi.n	8000cda <LCD_command+0x36>
		delay(2); 									/* command 1 and 2 needs up to 1.64ms */
 8000cd2:	2002      	movs	r0, #2
 8000cd4:	f000 f823 	bl	8000d1e <delay>
	else
		delay(1); 									/* all others 40 us */

}
 8000cd8:	e002      	b.n	8000ce0 <LCD_command+0x3c>
		delay(1); 									/* all others 40 us */
 8000cda:	2001      	movs	r0, #1
 8000cdc:	f000 f81f 	bl	8000d1e <delay>
}
 8000ce0:	bf00      	nop
 8000ce2:	3708      	adds	r7, #8
 8000ce4:	46bd      	mov	sp, r7
 8000ce6:	bd80      	pop	{r7, pc}

08000ce8 <LCD_data>:
void LCD_data(char data)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	b082      	sub	sp, #8
 8000cec:	af00      	add	r7, sp, #0
 8000cee:	4603      	mov	r3, r0
 8000cf0:	71fb      	strb	r3, [r7, #7]
	LCD_nibble_write(data & 0xF0, RS); 				/* upper nibble first */
 8000cf2:	79fb      	ldrb	r3, [r7, #7]
 8000cf4:	f023 030f 	bic.w	r3, r3, #15
 8000cf8:	b2db      	uxtb	r3, r3
 8000cfa:	2120      	movs	r1, #32
 8000cfc:	4618      	mov	r0, r3
 8000cfe:	f7ff ffa1 	bl	8000c44 <LCD_nibble_write>
	LCD_nibble_write(data << 4, RS); 				/* then lower nibble */
 8000d02:	79fb      	ldrb	r3, [r7, #7]
 8000d04:	011b      	lsls	r3, r3, #4
 8000d06:	b2db      	uxtb	r3, r3
 8000d08:	2120      	movs	r1, #32
 8000d0a:	4618      	mov	r0, r3
 8000d0c:	f7ff ff9a 	bl	8000c44 <LCD_nibble_write>
	delay(10);
 8000d10:	200a      	movs	r0, #10
 8000d12:	f000 f804 	bl	8000d1e <delay>
}
 8000d16:	bf00      	nop
 8000d18:	3708      	adds	r7, #8
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	bd80      	pop	{r7, pc}

08000d1e <delay>:

void delay(int seconds)
{
 8000d1e:	b480      	push	{r7}
 8000d20:	b085      	sub	sp, #20
 8000d22:	af00      	add	r7, sp, #0
 8000d24:	6078      	str	r0, [r7, #4]

	for(;seconds>0;seconds--)
 8000d26:	e00d      	b.n	8000d44 <delay+0x26>
	{
		for(int count1=0;count1<3000;count1++)
 8000d28:	2300      	movs	r3, #0
 8000d2a:	60fb      	str	r3, [r7, #12]
 8000d2c:	e002      	b.n	8000d34 <delay+0x16>
 8000d2e:	68fb      	ldr	r3, [r7, #12]
 8000d30:	3301      	adds	r3, #1
 8000d32:	60fb      	str	r3, [r7, #12]
 8000d34:	68fb      	ldr	r3, [r7, #12]
 8000d36:	f640 32b7 	movw	r2, #2999	; 0xbb7
 8000d3a:	4293      	cmp	r3, r2
 8000d3c:	ddf7      	ble.n	8000d2e <delay+0x10>
	for(;seconds>0;seconds--)
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	3b01      	subs	r3, #1
 8000d42:	607b      	str	r3, [r7, #4]
 8000d44:	687b      	ldr	r3, [r7, #4]
 8000d46:	2b00      	cmp	r3, #0
 8000d48:	dcee      	bgt.n	8000d28 <delay+0xa>
		{

		}
	}
}
 8000d4a:	bf00      	nop
 8000d4c:	bf00      	nop
 8000d4e:	3714      	adds	r7, #20
 8000d50:	46bd      	mov	sp, r7
 8000d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d56:	4770      	bx	lr

08000d58 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000d58:	b580      	push	{r7, lr}
 8000d5a:	b086      	sub	sp, #24
 8000d5c:	af00      	add	r7, sp, #0
 8000d5e:	60f8      	str	r0, [r7, #12]
 8000d60:	60b9      	str	r1, [r7, #8]
 8000d62:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d64:	2300      	movs	r3, #0
 8000d66:	617b      	str	r3, [r7, #20]
 8000d68:	e00a      	b.n	8000d80 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000d6a:	f3af 8000 	nop.w
 8000d6e:	4601      	mov	r1, r0
 8000d70:	68bb      	ldr	r3, [r7, #8]
 8000d72:	1c5a      	adds	r2, r3, #1
 8000d74:	60ba      	str	r2, [r7, #8]
 8000d76:	b2ca      	uxtb	r2, r1
 8000d78:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d7a:	697b      	ldr	r3, [r7, #20]
 8000d7c:	3301      	adds	r3, #1
 8000d7e:	617b      	str	r3, [r7, #20]
 8000d80:	697a      	ldr	r2, [r7, #20]
 8000d82:	687b      	ldr	r3, [r7, #4]
 8000d84:	429a      	cmp	r2, r3
 8000d86:	dbf0      	blt.n	8000d6a <_read+0x12>
	}

return len;
 8000d88:	687b      	ldr	r3, [r7, #4]
}
 8000d8a:	4618      	mov	r0, r3
 8000d8c:	3718      	adds	r7, #24
 8000d8e:	46bd      	mov	sp, r7
 8000d90:	bd80      	pop	{r7, pc}

08000d92 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000d92:	b580      	push	{r7, lr}
 8000d94:	b086      	sub	sp, #24
 8000d96:	af00      	add	r7, sp, #0
 8000d98:	60f8      	str	r0, [r7, #12]
 8000d9a:	60b9      	str	r1, [r7, #8]
 8000d9c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d9e:	2300      	movs	r3, #0
 8000da0:	617b      	str	r3, [r7, #20]
 8000da2:	e009      	b.n	8000db8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000da4:	68bb      	ldr	r3, [r7, #8]
 8000da6:	1c5a      	adds	r2, r3, #1
 8000da8:	60ba      	str	r2, [r7, #8]
 8000daa:	781b      	ldrb	r3, [r3, #0]
 8000dac:	4618      	mov	r0, r3
 8000dae:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000db2:	697b      	ldr	r3, [r7, #20]
 8000db4:	3301      	adds	r3, #1
 8000db6:	617b      	str	r3, [r7, #20]
 8000db8:	697a      	ldr	r2, [r7, #20]
 8000dba:	687b      	ldr	r3, [r7, #4]
 8000dbc:	429a      	cmp	r2, r3
 8000dbe:	dbf1      	blt.n	8000da4 <_write+0x12>
	}
	return len;
 8000dc0:	687b      	ldr	r3, [r7, #4]
}
 8000dc2:	4618      	mov	r0, r3
 8000dc4:	3718      	adds	r7, #24
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	bd80      	pop	{r7, pc}

08000dca <_close>:

int _close(int file)
{
 8000dca:	b480      	push	{r7}
 8000dcc:	b083      	sub	sp, #12
 8000dce:	af00      	add	r7, sp, #0
 8000dd0:	6078      	str	r0, [r7, #4]
	return -1;
 8000dd2:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000dd6:	4618      	mov	r0, r3
 8000dd8:	370c      	adds	r7, #12
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000de0:	4770      	bx	lr

08000de2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000de2:	b480      	push	{r7}
 8000de4:	b083      	sub	sp, #12
 8000de6:	af00      	add	r7, sp, #0
 8000de8:	6078      	str	r0, [r7, #4]
 8000dea:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000dec:	683b      	ldr	r3, [r7, #0]
 8000dee:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000df2:	605a      	str	r2, [r3, #4]
	return 0;
 8000df4:	2300      	movs	r3, #0
}
 8000df6:	4618      	mov	r0, r3
 8000df8:	370c      	adds	r7, #12
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e00:	4770      	bx	lr

08000e02 <_isatty>:

int _isatty(int file)
{
 8000e02:	b480      	push	{r7}
 8000e04:	b083      	sub	sp, #12
 8000e06:	af00      	add	r7, sp, #0
 8000e08:	6078      	str	r0, [r7, #4]
	return 1;
 8000e0a:	2301      	movs	r3, #1
}
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	370c      	adds	r7, #12
 8000e10:	46bd      	mov	sp, r7
 8000e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e16:	4770      	bx	lr

08000e18 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000e18:	b480      	push	{r7}
 8000e1a:	b085      	sub	sp, #20
 8000e1c:	af00      	add	r7, sp, #0
 8000e1e:	60f8      	str	r0, [r7, #12]
 8000e20:	60b9      	str	r1, [r7, #8]
 8000e22:	607a      	str	r2, [r7, #4]
	return 0;
 8000e24:	2300      	movs	r3, #0
}
 8000e26:	4618      	mov	r0, r3
 8000e28:	3714      	adds	r7, #20
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e30:	4770      	bx	lr
	...

08000e34 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000e34:	b580      	push	{r7, lr}
 8000e36:	b086      	sub	sp, #24
 8000e38:	af00      	add	r7, sp, #0
 8000e3a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000e3c:	4a14      	ldr	r2, [pc, #80]	; (8000e90 <_sbrk+0x5c>)
 8000e3e:	4b15      	ldr	r3, [pc, #84]	; (8000e94 <_sbrk+0x60>)
 8000e40:	1ad3      	subs	r3, r2, r3
 8000e42:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000e44:	697b      	ldr	r3, [r7, #20]
 8000e46:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000e48:	4b13      	ldr	r3, [pc, #76]	; (8000e98 <_sbrk+0x64>)
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	2b00      	cmp	r3, #0
 8000e4e:	d102      	bne.n	8000e56 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000e50:	4b11      	ldr	r3, [pc, #68]	; (8000e98 <_sbrk+0x64>)
 8000e52:	4a12      	ldr	r2, [pc, #72]	; (8000e9c <_sbrk+0x68>)
 8000e54:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000e56:	4b10      	ldr	r3, [pc, #64]	; (8000e98 <_sbrk+0x64>)
 8000e58:	681a      	ldr	r2, [r3, #0]
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	4413      	add	r3, r2
 8000e5e:	693a      	ldr	r2, [r7, #16]
 8000e60:	429a      	cmp	r2, r3
 8000e62:	d207      	bcs.n	8000e74 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000e64:	f000 f858 	bl	8000f18 <__errno>
 8000e68:	4603      	mov	r3, r0
 8000e6a:	220c      	movs	r2, #12
 8000e6c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000e6e:	f04f 33ff 	mov.w	r3, #4294967295
 8000e72:	e009      	b.n	8000e88 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000e74:	4b08      	ldr	r3, [pc, #32]	; (8000e98 <_sbrk+0x64>)
 8000e76:	681b      	ldr	r3, [r3, #0]
 8000e78:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000e7a:	4b07      	ldr	r3, [pc, #28]	; (8000e98 <_sbrk+0x64>)
 8000e7c:	681a      	ldr	r2, [r3, #0]
 8000e7e:	687b      	ldr	r3, [r7, #4]
 8000e80:	4413      	add	r3, r2
 8000e82:	4a05      	ldr	r2, [pc, #20]	; (8000e98 <_sbrk+0x64>)
 8000e84:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000e86:	68fb      	ldr	r3, [r7, #12]
}
 8000e88:	4618      	mov	r0, r3
 8000e8a:	3718      	adds	r7, #24
 8000e8c:	46bd      	mov	sp, r7
 8000e8e:	bd80      	pop	{r7, pc}
 8000e90:	20020000 	.word	0x20020000
 8000e94:	00000400 	.word	0x00000400
 8000e98:	20000080 	.word	0x20000080
 8000e9c:	20000098 	.word	0x20000098

08000ea0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000ea0:	b480      	push	{r7}
 8000ea2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000ea4:	4b06      	ldr	r3, [pc, #24]	; (8000ec0 <SystemInit+0x20>)
 8000ea6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000eaa:	4a05      	ldr	r2, [pc, #20]	; (8000ec0 <SystemInit+0x20>)
 8000eac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000eb0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000eb4:	bf00      	nop
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebc:	4770      	bx	lr
 8000ebe:	bf00      	nop
 8000ec0:	e000ed00 	.word	0xe000ed00

08000ec4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8000ec4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000efc <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000ec8:	480d      	ldr	r0, [pc, #52]	; (8000f00 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000eca:	490e      	ldr	r1, [pc, #56]	; (8000f04 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000ecc:	4a0e      	ldr	r2, [pc, #56]	; (8000f08 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000ece:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000ed0:	e002      	b.n	8000ed8 <LoopCopyDataInit>

08000ed2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000ed2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000ed4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000ed6:	3304      	adds	r3, #4

08000ed8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ed8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000eda:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000edc:	d3f9      	bcc.n	8000ed2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000ede:	4a0b      	ldr	r2, [pc, #44]	; (8000f0c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000ee0:	4c0b      	ldr	r4, [pc, #44]	; (8000f10 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000ee2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ee4:	e001      	b.n	8000eea <LoopFillZerobss>

08000ee6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ee6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ee8:	3204      	adds	r2, #4

08000eea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000eea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000eec:	d3fb      	bcc.n	8000ee6 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8000eee:	f7ff ffd7 	bl	8000ea0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ef2:	f000 f817 	bl	8000f24 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000ef6:	f7ff fd93 	bl	8000a20 <main>
  bx  lr    
 8000efa:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8000efc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000f00:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000f04:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000f08:	08001f68 	.word	0x08001f68
  ldr r2, =_sbss
 8000f0c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000f10:	20000094 	.word	0x20000094

08000f14 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000f14:	e7fe      	b.n	8000f14 <ADC_IRQHandler>
	...

08000f18 <__errno>:
 8000f18:	4b01      	ldr	r3, [pc, #4]	; (8000f20 <__errno+0x8>)
 8000f1a:	6818      	ldr	r0, [r3, #0]
 8000f1c:	4770      	bx	lr
 8000f1e:	bf00      	nop
 8000f20:	20000000 	.word	0x20000000

08000f24 <__libc_init_array>:
 8000f24:	b570      	push	{r4, r5, r6, lr}
 8000f26:	4d0d      	ldr	r5, [pc, #52]	; (8000f5c <__libc_init_array+0x38>)
 8000f28:	4c0d      	ldr	r4, [pc, #52]	; (8000f60 <__libc_init_array+0x3c>)
 8000f2a:	1b64      	subs	r4, r4, r5
 8000f2c:	10a4      	asrs	r4, r4, #2
 8000f2e:	2600      	movs	r6, #0
 8000f30:	42a6      	cmp	r6, r4
 8000f32:	d109      	bne.n	8000f48 <__libc_init_array+0x24>
 8000f34:	4d0b      	ldr	r5, [pc, #44]	; (8000f64 <__libc_init_array+0x40>)
 8000f36:	4c0c      	ldr	r4, [pc, #48]	; (8000f68 <__libc_init_array+0x44>)
 8000f38:	f000 ffae 	bl	8001e98 <_init>
 8000f3c:	1b64      	subs	r4, r4, r5
 8000f3e:	10a4      	asrs	r4, r4, #2
 8000f40:	2600      	movs	r6, #0
 8000f42:	42a6      	cmp	r6, r4
 8000f44:	d105      	bne.n	8000f52 <__libc_init_array+0x2e>
 8000f46:	bd70      	pop	{r4, r5, r6, pc}
 8000f48:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f4c:	4798      	blx	r3
 8000f4e:	3601      	adds	r6, #1
 8000f50:	e7ee      	b.n	8000f30 <__libc_init_array+0xc>
 8000f52:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f56:	4798      	blx	r3
 8000f58:	3601      	adds	r6, #1
 8000f5a:	e7f2      	b.n	8000f42 <__libc_init_array+0x1e>
 8000f5c:	08001f60 	.word	0x08001f60
 8000f60:	08001f60 	.word	0x08001f60
 8000f64:	08001f60 	.word	0x08001f60
 8000f68:	08001f64 	.word	0x08001f64

08000f6c <memset>:
 8000f6c:	4402      	add	r2, r0
 8000f6e:	4603      	mov	r3, r0
 8000f70:	4293      	cmp	r3, r2
 8000f72:	d100      	bne.n	8000f76 <memset+0xa>
 8000f74:	4770      	bx	lr
 8000f76:	f803 1b01 	strb.w	r1, [r3], #1
 8000f7a:	e7f9      	b.n	8000f70 <memset+0x4>

08000f7c <iprintf>:
 8000f7c:	b40f      	push	{r0, r1, r2, r3}
 8000f7e:	4b0a      	ldr	r3, [pc, #40]	; (8000fa8 <iprintf+0x2c>)
 8000f80:	b513      	push	{r0, r1, r4, lr}
 8000f82:	681c      	ldr	r4, [r3, #0]
 8000f84:	b124      	cbz	r4, 8000f90 <iprintf+0x14>
 8000f86:	69a3      	ldr	r3, [r4, #24]
 8000f88:	b913      	cbnz	r3, 8000f90 <iprintf+0x14>
 8000f8a:	4620      	mov	r0, r4
 8000f8c:	f000 f866 	bl	800105c <__sinit>
 8000f90:	ab05      	add	r3, sp, #20
 8000f92:	9a04      	ldr	r2, [sp, #16]
 8000f94:	68a1      	ldr	r1, [r4, #8]
 8000f96:	9301      	str	r3, [sp, #4]
 8000f98:	4620      	mov	r0, r4
 8000f9a:	f000 f9bd 	bl	8001318 <_vfiprintf_r>
 8000f9e:	b002      	add	sp, #8
 8000fa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000fa4:	b004      	add	sp, #16
 8000fa6:	4770      	bx	lr
 8000fa8:	20000000 	.word	0x20000000

08000fac <std>:
 8000fac:	2300      	movs	r3, #0
 8000fae:	b510      	push	{r4, lr}
 8000fb0:	4604      	mov	r4, r0
 8000fb2:	e9c0 3300 	strd	r3, r3, [r0]
 8000fb6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000fba:	6083      	str	r3, [r0, #8]
 8000fbc:	8181      	strh	r1, [r0, #12]
 8000fbe:	6643      	str	r3, [r0, #100]	; 0x64
 8000fc0:	81c2      	strh	r2, [r0, #14]
 8000fc2:	6183      	str	r3, [r0, #24]
 8000fc4:	4619      	mov	r1, r3
 8000fc6:	2208      	movs	r2, #8
 8000fc8:	305c      	adds	r0, #92	; 0x5c
 8000fca:	f7ff ffcf 	bl	8000f6c <memset>
 8000fce:	4b05      	ldr	r3, [pc, #20]	; (8000fe4 <std+0x38>)
 8000fd0:	6263      	str	r3, [r4, #36]	; 0x24
 8000fd2:	4b05      	ldr	r3, [pc, #20]	; (8000fe8 <std+0x3c>)
 8000fd4:	62a3      	str	r3, [r4, #40]	; 0x28
 8000fd6:	4b05      	ldr	r3, [pc, #20]	; (8000fec <std+0x40>)
 8000fd8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fda:	4b05      	ldr	r3, [pc, #20]	; (8000ff0 <std+0x44>)
 8000fdc:	6224      	str	r4, [r4, #32]
 8000fde:	6323      	str	r3, [r4, #48]	; 0x30
 8000fe0:	bd10      	pop	{r4, pc}
 8000fe2:	bf00      	nop
 8000fe4:	080018c1 	.word	0x080018c1
 8000fe8:	080018e3 	.word	0x080018e3
 8000fec:	0800191b 	.word	0x0800191b
 8000ff0:	0800193f 	.word	0x0800193f

08000ff4 <_cleanup_r>:
 8000ff4:	4901      	ldr	r1, [pc, #4]	; (8000ffc <_cleanup_r+0x8>)
 8000ff6:	f000 b8af 	b.w	8001158 <_fwalk_reent>
 8000ffa:	bf00      	nop
 8000ffc:	08001c19 	.word	0x08001c19

08001000 <__sfmoreglue>:
 8001000:	b570      	push	{r4, r5, r6, lr}
 8001002:	2268      	movs	r2, #104	; 0x68
 8001004:	1e4d      	subs	r5, r1, #1
 8001006:	4355      	muls	r5, r2
 8001008:	460e      	mov	r6, r1
 800100a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800100e:	f000 f8e5 	bl	80011dc <_malloc_r>
 8001012:	4604      	mov	r4, r0
 8001014:	b140      	cbz	r0, 8001028 <__sfmoreglue+0x28>
 8001016:	2100      	movs	r1, #0
 8001018:	e9c0 1600 	strd	r1, r6, [r0]
 800101c:	300c      	adds	r0, #12
 800101e:	60a0      	str	r0, [r4, #8]
 8001020:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001024:	f7ff ffa2 	bl	8000f6c <memset>
 8001028:	4620      	mov	r0, r4
 800102a:	bd70      	pop	{r4, r5, r6, pc}

0800102c <__sfp_lock_acquire>:
 800102c:	4801      	ldr	r0, [pc, #4]	; (8001034 <__sfp_lock_acquire+0x8>)
 800102e:	f000 b8b3 	b.w	8001198 <__retarget_lock_acquire_recursive>
 8001032:	bf00      	nop
 8001034:	20000085 	.word	0x20000085

08001038 <__sfp_lock_release>:
 8001038:	4801      	ldr	r0, [pc, #4]	; (8001040 <__sfp_lock_release+0x8>)
 800103a:	f000 b8ae 	b.w	800119a <__retarget_lock_release_recursive>
 800103e:	bf00      	nop
 8001040:	20000085 	.word	0x20000085

08001044 <__sinit_lock_acquire>:
 8001044:	4801      	ldr	r0, [pc, #4]	; (800104c <__sinit_lock_acquire+0x8>)
 8001046:	f000 b8a7 	b.w	8001198 <__retarget_lock_acquire_recursive>
 800104a:	bf00      	nop
 800104c:	20000086 	.word	0x20000086

08001050 <__sinit_lock_release>:
 8001050:	4801      	ldr	r0, [pc, #4]	; (8001058 <__sinit_lock_release+0x8>)
 8001052:	f000 b8a2 	b.w	800119a <__retarget_lock_release_recursive>
 8001056:	bf00      	nop
 8001058:	20000086 	.word	0x20000086

0800105c <__sinit>:
 800105c:	b510      	push	{r4, lr}
 800105e:	4604      	mov	r4, r0
 8001060:	f7ff fff0 	bl	8001044 <__sinit_lock_acquire>
 8001064:	69a3      	ldr	r3, [r4, #24]
 8001066:	b11b      	cbz	r3, 8001070 <__sinit+0x14>
 8001068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800106c:	f7ff bff0 	b.w	8001050 <__sinit_lock_release>
 8001070:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001074:	6523      	str	r3, [r4, #80]	; 0x50
 8001076:	4b13      	ldr	r3, [pc, #76]	; (80010c4 <__sinit+0x68>)
 8001078:	4a13      	ldr	r2, [pc, #76]	; (80010c8 <__sinit+0x6c>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	62a2      	str	r2, [r4, #40]	; 0x28
 800107e:	42a3      	cmp	r3, r4
 8001080:	bf04      	itt	eq
 8001082:	2301      	moveq	r3, #1
 8001084:	61a3      	streq	r3, [r4, #24]
 8001086:	4620      	mov	r0, r4
 8001088:	f000 f820 	bl	80010cc <__sfp>
 800108c:	6060      	str	r0, [r4, #4]
 800108e:	4620      	mov	r0, r4
 8001090:	f000 f81c 	bl	80010cc <__sfp>
 8001094:	60a0      	str	r0, [r4, #8]
 8001096:	4620      	mov	r0, r4
 8001098:	f000 f818 	bl	80010cc <__sfp>
 800109c:	2200      	movs	r2, #0
 800109e:	60e0      	str	r0, [r4, #12]
 80010a0:	2104      	movs	r1, #4
 80010a2:	6860      	ldr	r0, [r4, #4]
 80010a4:	f7ff ff82 	bl	8000fac <std>
 80010a8:	68a0      	ldr	r0, [r4, #8]
 80010aa:	2201      	movs	r2, #1
 80010ac:	2109      	movs	r1, #9
 80010ae:	f7ff ff7d 	bl	8000fac <std>
 80010b2:	68e0      	ldr	r0, [r4, #12]
 80010b4:	2202      	movs	r2, #2
 80010b6:	2112      	movs	r1, #18
 80010b8:	f7ff ff78 	bl	8000fac <std>
 80010bc:	2301      	movs	r3, #1
 80010be:	61a3      	str	r3, [r4, #24]
 80010c0:	e7d2      	b.n	8001068 <__sinit+0xc>
 80010c2:	bf00      	nop
 80010c4:	08001ec8 	.word	0x08001ec8
 80010c8:	08000ff5 	.word	0x08000ff5

080010cc <__sfp>:
 80010cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ce:	4607      	mov	r7, r0
 80010d0:	f7ff ffac 	bl	800102c <__sfp_lock_acquire>
 80010d4:	4b1e      	ldr	r3, [pc, #120]	; (8001150 <__sfp+0x84>)
 80010d6:	681e      	ldr	r6, [r3, #0]
 80010d8:	69b3      	ldr	r3, [r6, #24]
 80010da:	b913      	cbnz	r3, 80010e2 <__sfp+0x16>
 80010dc:	4630      	mov	r0, r6
 80010de:	f7ff ffbd 	bl	800105c <__sinit>
 80010e2:	3648      	adds	r6, #72	; 0x48
 80010e4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80010e8:	3b01      	subs	r3, #1
 80010ea:	d503      	bpl.n	80010f4 <__sfp+0x28>
 80010ec:	6833      	ldr	r3, [r6, #0]
 80010ee:	b30b      	cbz	r3, 8001134 <__sfp+0x68>
 80010f0:	6836      	ldr	r6, [r6, #0]
 80010f2:	e7f7      	b.n	80010e4 <__sfp+0x18>
 80010f4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80010f8:	b9d5      	cbnz	r5, 8001130 <__sfp+0x64>
 80010fa:	4b16      	ldr	r3, [pc, #88]	; (8001154 <__sfp+0x88>)
 80010fc:	60e3      	str	r3, [r4, #12]
 80010fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001102:	6665      	str	r5, [r4, #100]	; 0x64
 8001104:	f000 f847 	bl	8001196 <__retarget_lock_init_recursive>
 8001108:	f7ff ff96 	bl	8001038 <__sfp_lock_release>
 800110c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001110:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001114:	6025      	str	r5, [r4, #0]
 8001116:	61a5      	str	r5, [r4, #24]
 8001118:	2208      	movs	r2, #8
 800111a:	4629      	mov	r1, r5
 800111c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001120:	f7ff ff24 	bl	8000f6c <memset>
 8001124:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001128:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800112c:	4620      	mov	r0, r4
 800112e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001130:	3468      	adds	r4, #104	; 0x68
 8001132:	e7d9      	b.n	80010e8 <__sfp+0x1c>
 8001134:	2104      	movs	r1, #4
 8001136:	4638      	mov	r0, r7
 8001138:	f7ff ff62 	bl	8001000 <__sfmoreglue>
 800113c:	4604      	mov	r4, r0
 800113e:	6030      	str	r0, [r6, #0]
 8001140:	2800      	cmp	r0, #0
 8001142:	d1d5      	bne.n	80010f0 <__sfp+0x24>
 8001144:	f7ff ff78 	bl	8001038 <__sfp_lock_release>
 8001148:	230c      	movs	r3, #12
 800114a:	603b      	str	r3, [r7, #0]
 800114c:	e7ee      	b.n	800112c <__sfp+0x60>
 800114e:	bf00      	nop
 8001150:	08001ec8 	.word	0x08001ec8
 8001154:	ffff0001 	.word	0xffff0001

08001158 <_fwalk_reent>:
 8001158:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800115c:	4606      	mov	r6, r0
 800115e:	4688      	mov	r8, r1
 8001160:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001164:	2700      	movs	r7, #0
 8001166:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800116a:	f1b9 0901 	subs.w	r9, r9, #1
 800116e:	d505      	bpl.n	800117c <_fwalk_reent+0x24>
 8001170:	6824      	ldr	r4, [r4, #0]
 8001172:	2c00      	cmp	r4, #0
 8001174:	d1f7      	bne.n	8001166 <_fwalk_reent+0xe>
 8001176:	4638      	mov	r0, r7
 8001178:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800117c:	89ab      	ldrh	r3, [r5, #12]
 800117e:	2b01      	cmp	r3, #1
 8001180:	d907      	bls.n	8001192 <_fwalk_reent+0x3a>
 8001182:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001186:	3301      	adds	r3, #1
 8001188:	d003      	beq.n	8001192 <_fwalk_reent+0x3a>
 800118a:	4629      	mov	r1, r5
 800118c:	4630      	mov	r0, r6
 800118e:	47c0      	blx	r8
 8001190:	4307      	orrs	r7, r0
 8001192:	3568      	adds	r5, #104	; 0x68
 8001194:	e7e9      	b.n	800116a <_fwalk_reent+0x12>

08001196 <__retarget_lock_init_recursive>:
 8001196:	4770      	bx	lr

08001198 <__retarget_lock_acquire_recursive>:
 8001198:	4770      	bx	lr

0800119a <__retarget_lock_release_recursive>:
 800119a:	4770      	bx	lr

0800119c <sbrk_aligned>:
 800119c:	b570      	push	{r4, r5, r6, lr}
 800119e:	4e0e      	ldr	r6, [pc, #56]	; (80011d8 <sbrk_aligned+0x3c>)
 80011a0:	460c      	mov	r4, r1
 80011a2:	6831      	ldr	r1, [r6, #0]
 80011a4:	4605      	mov	r5, r0
 80011a6:	b911      	cbnz	r1, 80011ae <sbrk_aligned+0x12>
 80011a8:	f000 fb7a 	bl	80018a0 <_sbrk_r>
 80011ac:	6030      	str	r0, [r6, #0]
 80011ae:	4621      	mov	r1, r4
 80011b0:	4628      	mov	r0, r5
 80011b2:	f000 fb75 	bl	80018a0 <_sbrk_r>
 80011b6:	1c43      	adds	r3, r0, #1
 80011b8:	d00a      	beq.n	80011d0 <sbrk_aligned+0x34>
 80011ba:	1cc4      	adds	r4, r0, #3
 80011bc:	f024 0403 	bic.w	r4, r4, #3
 80011c0:	42a0      	cmp	r0, r4
 80011c2:	d007      	beq.n	80011d4 <sbrk_aligned+0x38>
 80011c4:	1a21      	subs	r1, r4, r0
 80011c6:	4628      	mov	r0, r5
 80011c8:	f000 fb6a 	bl	80018a0 <_sbrk_r>
 80011cc:	3001      	adds	r0, #1
 80011ce:	d101      	bne.n	80011d4 <sbrk_aligned+0x38>
 80011d0:	f04f 34ff 	mov.w	r4, #4294967295
 80011d4:	4620      	mov	r0, r4
 80011d6:	bd70      	pop	{r4, r5, r6, pc}
 80011d8:	2000008c 	.word	0x2000008c

080011dc <_malloc_r>:
 80011dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011e0:	1ccd      	adds	r5, r1, #3
 80011e2:	f025 0503 	bic.w	r5, r5, #3
 80011e6:	3508      	adds	r5, #8
 80011e8:	2d0c      	cmp	r5, #12
 80011ea:	bf38      	it	cc
 80011ec:	250c      	movcc	r5, #12
 80011ee:	2d00      	cmp	r5, #0
 80011f0:	4607      	mov	r7, r0
 80011f2:	db01      	blt.n	80011f8 <_malloc_r+0x1c>
 80011f4:	42a9      	cmp	r1, r5
 80011f6:	d905      	bls.n	8001204 <_malloc_r+0x28>
 80011f8:	230c      	movs	r3, #12
 80011fa:	603b      	str	r3, [r7, #0]
 80011fc:	2600      	movs	r6, #0
 80011fe:	4630      	mov	r0, r6
 8001200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001204:	4e2e      	ldr	r6, [pc, #184]	; (80012c0 <_malloc_r+0xe4>)
 8001206:	f000 fdbb 	bl	8001d80 <__malloc_lock>
 800120a:	6833      	ldr	r3, [r6, #0]
 800120c:	461c      	mov	r4, r3
 800120e:	bb34      	cbnz	r4, 800125e <_malloc_r+0x82>
 8001210:	4629      	mov	r1, r5
 8001212:	4638      	mov	r0, r7
 8001214:	f7ff ffc2 	bl	800119c <sbrk_aligned>
 8001218:	1c43      	adds	r3, r0, #1
 800121a:	4604      	mov	r4, r0
 800121c:	d14d      	bne.n	80012ba <_malloc_r+0xde>
 800121e:	6834      	ldr	r4, [r6, #0]
 8001220:	4626      	mov	r6, r4
 8001222:	2e00      	cmp	r6, #0
 8001224:	d140      	bne.n	80012a8 <_malloc_r+0xcc>
 8001226:	6823      	ldr	r3, [r4, #0]
 8001228:	4631      	mov	r1, r6
 800122a:	4638      	mov	r0, r7
 800122c:	eb04 0803 	add.w	r8, r4, r3
 8001230:	f000 fb36 	bl	80018a0 <_sbrk_r>
 8001234:	4580      	cmp	r8, r0
 8001236:	d13a      	bne.n	80012ae <_malloc_r+0xd2>
 8001238:	6821      	ldr	r1, [r4, #0]
 800123a:	3503      	adds	r5, #3
 800123c:	1a6d      	subs	r5, r5, r1
 800123e:	f025 0503 	bic.w	r5, r5, #3
 8001242:	3508      	adds	r5, #8
 8001244:	2d0c      	cmp	r5, #12
 8001246:	bf38      	it	cc
 8001248:	250c      	movcc	r5, #12
 800124a:	4629      	mov	r1, r5
 800124c:	4638      	mov	r0, r7
 800124e:	f7ff ffa5 	bl	800119c <sbrk_aligned>
 8001252:	3001      	adds	r0, #1
 8001254:	d02b      	beq.n	80012ae <_malloc_r+0xd2>
 8001256:	6823      	ldr	r3, [r4, #0]
 8001258:	442b      	add	r3, r5
 800125a:	6023      	str	r3, [r4, #0]
 800125c:	e00e      	b.n	800127c <_malloc_r+0xa0>
 800125e:	6822      	ldr	r2, [r4, #0]
 8001260:	1b52      	subs	r2, r2, r5
 8001262:	d41e      	bmi.n	80012a2 <_malloc_r+0xc6>
 8001264:	2a0b      	cmp	r2, #11
 8001266:	d916      	bls.n	8001296 <_malloc_r+0xba>
 8001268:	1961      	adds	r1, r4, r5
 800126a:	42a3      	cmp	r3, r4
 800126c:	6025      	str	r5, [r4, #0]
 800126e:	bf18      	it	ne
 8001270:	6059      	strne	r1, [r3, #4]
 8001272:	6863      	ldr	r3, [r4, #4]
 8001274:	bf08      	it	eq
 8001276:	6031      	streq	r1, [r6, #0]
 8001278:	5162      	str	r2, [r4, r5]
 800127a:	604b      	str	r3, [r1, #4]
 800127c:	4638      	mov	r0, r7
 800127e:	f104 060b 	add.w	r6, r4, #11
 8001282:	f000 fd83 	bl	8001d8c <__malloc_unlock>
 8001286:	f026 0607 	bic.w	r6, r6, #7
 800128a:	1d23      	adds	r3, r4, #4
 800128c:	1af2      	subs	r2, r6, r3
 800128e:	d0b6      	beq.n	80011fe <_malloc_r+0x22>
 8001290:	1b9b      	subs	r3, r3, r6
 8001292:	50a3      	str	r3, [r4, r2]
 8001294:	e7b3      	b.n	80011fe <_malloc_r+0x22>
 8001296:	6862      	ldr	r2, [r4, #4]
 8001298:	42a3      	cmp	r3, r4
 800129a:	bf0c      	ite	eq
 800129c:	6032      	streq	r2, [r6, #0]
 800129e:	605a      	strne	r2, [r3, #4]
 80012a0:	e7ec      	b.n	800127c <_malloc_r+0xa0>
 80012a2:	4623      	mov	r3, r4
 80012a4:	6864      	ldr	r4, [r4, #4]
 80012a6:	e7b2      	b.n	800120e <_malloc_r+0x32>
 80012a8:	4634      	mov	r4, r6
 80012aa:	6876      	ldr	r6, [r6, #4]
 80012ac:	e7b9      	b.n	8001222 <_malloc_r+0x46>
 80012ae:	230c      	movs	r3, #12
 80012b0:	603b      	str	r3, [r7, #0]
 80012b2:	4638      	mov	r0, r7
 80012b4:	f000 fd6a 	bl	8001d8c <__malloc_unlock>
 80012b8:	e7a1      	b.n	80011fe <_malloc_r+0x22>
 80012ba:	6025      	str	r5, [r4, #0]
 80012bc:	e7de      	b.n	800127c <_malloc_r+0xa0>
 80012be:	bf00      	nop
 80012c0:	20000088 	.word	0x20000088

080012c4 <__sfputc_r>:
 80012c4:	6893      	ldr	r3, [r2, #8]
 80012c6:	3b01      	subs	r3, #1
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	b410      	push	{r4}
 80012cc:	6093      	str	r3, [r2, #8]
 80012ce:	da08      	bge.n	80012e2 <__sfputc_r+0x1e>
 80012d0:	6994      	ldr	r4, [r2, #24]
 80012d2:	42a3      	cmp	r3, r4
 80012d4:	db01      	blt.n	80012da <__sfputc_r+0x16>
 80012d6:	290a      	cmp	r1, #10
 80012d8:	d103      	bne.n	80012e2 <__sfputc_r+0x1e>
 80012da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80012de:	f000 bb33 	b.w	8001948 <__swbuf_r>
 80012e2:	6813      	ldr	r3, [r2, #0]
 80012e4:	1c58      	adds	r0, r3, #1
 80012e6:	6010      	str	r0, [r2, #0]
 80012e8:	7019      	strb	r1, [r3, #0]
 80012ea:	4608      	mov	r0, r1
 80012ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80012f0:	4770      	bx	lr

080012f2 <__sfputs_r>:
 80012f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012f4:	4606      	mov	r6, r0
 80012f6:	460f      	mov	r7, r1
 80012f8:	4614      	mov	r4, r2
 80012fa:	18d5      	adds	r5, r2, r3
 80012fc:	42ac      	cmp	r4, r5
 80012fe:	d101      	bne.n	8001304 <__sfputs_r+0x12>
 8001300:	2000      	movs	r0, #0
 8001302:	e007      	b.n	8001314 <__sfputs_r+0x22>
 8001304:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001308:	463a      	mov	r2, r7
 800130a:	4630      	mov	r0, r6
 800130c:	f7ff ffda 	bl	80012c4 <__sfputc_r>
 8001310:	1c43      	adds	r3, r0, #1
 8001312:	d1f3      	bne.n	80012fc <__sfputs_r+0xa>
 8001314:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001318 <_vfiprintf_r>:
 8001318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800131c:	460d      	mov	r5, r1
 800131e:	b09d      	sub	sp, #116	; 0x74
 8001320:	4614      	mov	r4, r2
 8001322:	4698      	mov	r8, r3
 8001324:	4606      	mov	r6, r0
 8001326:	b118      	cbz	r0, 8001330 <_vfiprintf_r+0x18>
 8001328:	6983      	ldr	r3, [r0, #24]
 800132a:	b90b      	cbnz	r3, 8001330 <_vfiprintf_r+0x18>
 800132c:	f7ff fe96 	bl	800105c <__sinit>
 8001330:	4b89      	ldr	r3, [pc, #548]	; (8001558 <_vfiprintf_r+0x240>)
 8001332:	429d      	cmp	r5, r3
 8001334:	d11b      	bne.n	800136e <_vfiprintf_r+0x56>
 8001336:	6875      	ldr	r5, [r6, #4]
 8001338:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800133a:	07d9      	lsls	r1, r3, #31
 800133c:	d405      	bmi.n	800134a <_vfiprintf_r+0x32>
 800133e:	89ab      	ldrh	r3, [r5, #12]
 8001340:	059a      	lsls	r2, r3, #22
 8001342:	d402      	bmi.n	800134a <_vfiprintf_r+0x32>
 8001344:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001346:	f7ff ff27 	bl	8001198 <__retarget_lock_acquire_recursive>
 800134a:	89ab      	ldrh	r3, [r5, #12]
 800134c:	071b      	lsls	r3, r3, #28
 800134e:	d501      	bpl.n	8001354 <_vfiprintf_r+0x3c>
 8001350:	692b      	ldr	r3, [r5, #16]
 8001352:	b9eb      	cbnz	r3, 8001390 <_vfiprintf_r+0x78>
 8001354:	4629      	mov	r1, r5
 8001356:	4630      	mov	r0, r6
 8001358:	f000 fb5a 	bl	8001a10 <__swsetup_r>
 800135c:	b1c0      	cbz	r0, 8001390 <_vfiprintf_r+0x78>
 800135e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001360:	07dc      	lsls	r4, r3, #31
 8001362:	d50e      	bpl.n	8001382 <_vfiprintf_r+0x6a>
 8001364:	f04f 30ff 	mov.w	r0, #4294967295
 8001368:	b01d      	add	sp, #116	; 0x74
 800136a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800136e:	4b7b      	ldr	r3, [pc, #492]	; (800155c <_vfiprintf_r+0x244>)
 8001370:	429d      	cmp	r5, r3
 8001372:	d101      	bne.n	8001378 <_vfiprintf_r+0x60>
 8001374:	68b5      	ldr	r5, [r6, #8]
 8001376:	e7df      	b.n	8001338 <_vfiprintf_r+0x20>
 8001378:	4b79      	ldr	r3, [pc, #484]	; (8001560 <_vfiprintf_r+0x248>)
 800137a:	429d      	cmp	r5, r3
 800137c:	bf08      	it	eq
 800137e:	68f5      	ldreq	r5, [r6, #12]
 8001380:	e7da      	b.n	8001338 <_vfiprintf_r+0x20>
 8001382:	89ab      	ldrh	r3, [r5, #12]
 8001384:	0598      	lsls	r0, r3, #22
 8001386:	d4ed      	bmi.n	8001364 <_vfiprintf_r+0x4c>
 8001388:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800138a:	f7ff ff06 	bl	800119a <__retarget_lock_release_recursive>
 800138e:	e7e9      	b.n	8001364 <_vfiprintf_r+0x4c>
 8001390:	2300      	movs	r3, #0
 8001392:	9309      	str	r3, [sp, #36]	; 0x24
 8001394:	2320      	movs	r3, #32
 8001396:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800139a:	f8cd 800c 	str.w	r8, [sp, #12]
 800139e:	2330      	movs	r3, #48	; 0x30
 80013a0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001564 <_vfiprintf_r+0x24c>
 80013a4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80013a8:	f04f 0901 	mov.w	r9, #1
 80013ac:	4623      	mov	r3, r4
 80013ae:	469a      	mov	sl, r3
 80013b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80013b4:	b10a      	cbz	r2, 80013ba <_vfiprintf_r+0xa2>
 80013b6:	2a25      	cmp	r2, #37	; 0x25
 80013b8:	d1f9      	bne.n	80013ae <_vfiprintf_r+0x96>
 80013ba:	ebba 0b04 	subs.w	fp, sl, r4
 80013be:	d00b      	beq.n	80013d8 <_vfiprintf_r+0xc0>
 80013c0:	465b      	mov	r3, fp
 80013c2:	4622      	mov	r2, r4
 80013c4:	4629      	mov	r1, r5
 80013c6:	4630      	mov	r0, r6
 80013c8:	f7ff ff93 	bl	80012f2 <__sfputs_r>
 80013cc:	3001      	adds	r0, #1
 80013ce:	f000 80aa 	beq.w	8001526 <_vfiprintf_r+0x20e>
 80013d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80013d4:	445a      	add	r2, fp
 80013d6:	9209      	str	r2, [sp, #36]	; 0x24
 80013d8:	f89a 3000 	ldrb.w	r3, [sl]
 80013dc:	2b00      	cmp	r3, #0
 80013de:	f000 80a2 	beq.w	8001526 <_vfiprintf_r+0x20e>
 80013e2:	2300      	movs	r3, #0
 80013e4:	f04f 32ff 	mov.w	r2, #4294967295
 80013e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80013ec:	f10a 0a01 	add.w	sl, sl, #1
 80013f0:	9304      	str	r3, [sp, #16]
 80013f2:	9307      	str	r3, [sp, #28]
 80013f4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80013f8:	931a      	str	r3, [sp, #104]	; 0x68
 80013fa:	4654      	mov	r4, sl
 80013fc:	2205      	movs	r2, #5
 80013fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001402:	4858      	ldr	r0, [pc, #352]	; (8001564 <_vfiprintf_r+0x24c>)
 8001404:	f7fe feec 	bl	80001e0 <memchr>
 8001408:	9a04      	ldr	r2, [sp, #16]
 800140a:	b9d8      	cbnz	r0, 8001444 <_vfiprintf_r+0x12c>
 800140c:	06d1      	lsls	r1, r2, #27
 800140e:	bf44      	itt	mi
 8001410:	2320      	movmi	r3, #32
 8001412:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001416:	0713      	lsls	r3, r2, #28
 8001418:	bf44      	itt	mi
 800141a:	232b      	movmi	r3, #43	; 0x2b
 800141c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001420:	f89a 3000 	ldrb.w	r3, [sl]
 8001424:	2b2a      	cmp	r3, #42	; 0x2a
 8001426:	d015      	beq.n	8001454 <_vfiprintf_r+0x13c>
 8001428:	9a07      	ldr	r2, [sp, #28]
 800142a:	4654      	mov	r4, sl
 800142c:	2000      	movs	r0, #0
 800142e:	f04f 0c0a 	mov.w	ip, #10
 8001432:	4621      	mov	r1, r4
 8001434:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001438:	3b30      	subs	r3, #48	; 0x30
 800143a:	2b09      	cmp	r3, #9
 800143c:	d94e      	bls.n	80014dc <_vfiprintf_r+0x1c4>
 800143e:	b1b0      	cbz	r0, 800146e <_vfiprintf_r+0x156>
 8001440:	9207      	str	r2, [sp, #28]
 8001442:	e014      	b.n	800146e <_vfiprintf_r+0x156>
 8001444:	eba0 0308 	sub.w	r3, r0, r8
 8001448:	fa09 f303 	lsl.w	r3, r9, r3
 800144c:	4313      	orrs	r3, r2
 800144e:	9304      	str	r3, [sp, #16]
 8001450:	46a2      	mov	sl, r4
 8001452:	e7d2      	b.n	80013fa <_vfiprintf_r+0xe2>
 8001454:	9b03      	ldr	r3, [sp, #12]
 8001456:	1d19      	adds	r1, r3, #4
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	9103      	str	r1, [sp, #12]
 800145c:	2b00      	cmp	r3, #0
 800145e:	bfbb      	ittet	lt
 8001460:	425b      	neglt	r3, r3
 8001462:	f042 0202 	orrlt.w	r2, r2, #2
 8001466:	9307      	strge	r3, [sp, #28]
 8001468:	9307      	strlt	r3, [sp, #28]
 800146a:	bfb8      	it	lt
 800146c:	9204      	strlt	r2, [sp, #16]
 800146e:	7823      	ldrb	r3, [r4, #0]
 8001470:	2b2e      	cmp	r3, #46	; 0x2e
 8001472:	d10c      	bne.n	800148e <_vfiprintf_r+0x176>
 8001474:	7863      	ldrb	r3, [r4, #1]
 8001476:	2b2a      	cmp	r3, #42	; 0x2a
 8001478:	d135      	bne.n	80014e6 <_vfiprintf_r+0x1ce>
 800147a:	9b03      	ldr	r3, [sp, #12]
 800147c:	1d1a      	adds	r2, r3, #4
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	9203      	str	r2, [sp, #12]
 8001482:	2b00      	cmp	r3, #0
 8001484:	bfb8      	it	lt
 8001486:	f04f 33ff 	movlt.w	r3, #4294967295
 800148a:	3402      	adds	r4, #2
 800148c:	9305      	str	r3, [sp, #20]
 800148e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001574 <_vfiprintf_r+0x25c>
 8001492:	7821      	ldrb	r1, [r4, #0]
 8001494:	2203      	movs	r2, #3
 8001496:	4650      	mov	r0, sl
 8001498:	f7fe fea2 	bl	80001e0 <memchr>
 800149c:	b140      	cbz	r0, 80014b0 <_vfiprintf_r+0x198>
 800149e:	2340      	movs	r3, #64	; 0x40
 80014a0:	eba0 000a 	sub.w	r0, r0, sl
 80014a4:	fa03 f000 	lsl.w	r0, r3, r0
 80014a8:	9b04      	ldr	r3, [sp, #16]
 80014aa:	4303      	orrs	r3, r0
 80014ac:	3401      	adds	r4, #1
 80014ae:	9304      	str	r3, [sp, #16]
 80014b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80014b4:	482c      	ldr	r0, [pc, #176]	; (8001568 <_vfiprintf_r+0x250>)
 80014b6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80014ba:	2206      	movs	r2, #6
 80014bc:	f7fe fe90 	bl	80001e0 <memchr>
 80014c0:	2800      	cmp	r0, #0
 80014c2:	d03f      	beq.n	8001544 <_vfiprintf_r+0x22c>
 80014c4:	4b29      	ldr	r3, [pc, #164]	; (800156c <_vfiprintf_r+0x254>)
 80014c6:	bb1b      	cbnz	r3, 8001510 <_vfiprintf_r+0x1f8>
 80014c8:	9b03      	ldr	r3, [sp, #12]
 80014ca:	3307      	adds	r3, #7
 80014cc:	f023 0307 	bic.w	r3, r3, #7
 80014d0:	3308      	adds	r3, #8
 80014d2:	9303      	str	r3, [sp, #12]
 80014d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80014d6:	443b      	add	r3, r7
 80014d8:	9309      	str	r3, [sp, #36]	; 0x24
 80014da:	e767      	b.n	80013ac <_vfiprintf_r+0x94>
 80014dc:	fb0c 3202 	mla	r2, ip, r2, r3
 80014e0:	460c      	mov	r4, r1
 80014e2:	2001      	movs	r0, #1
 80014e4:	e7a5      	b.n	8001432 <_vfiprintf_r+0x11a>
 80014e6:	2300      	movs	r3, #0
 80014e8:	3401      	adds	r4, #1
 80014ea:	9305      	str	r3, [sp, #20]
 80014ec:	4619      	mov	r1, r3
 80014ee:	f04f 0c0a 	mov.w	ip, #10
 80014f2:	4620      	mov	r0, r4
 80014f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80014f8:	3a30      	subs	r2, #48	; 0x30
 80014fa:	2a09      	cmp	r2, #9
 80014fc:	d903      	bls.n	8001506 <_vfiprintf_r+0x1ee>
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d0c5      	beq.n	800148e <_vfiprintf_r+0x176>
 8001502:	9105      	str	r1, [sp, #20]
 8001504:	e7c3      	b.n	800148e <_vfiprintf_r+0x176>
 8001506:	fb0c 2101 	mla	r1, ip, r1, r2
 800150a:	4604      	mov	r4, r0
 800150c:	2301      	movs	r3, #1
 800150e:	e7f0      	b.n	80014f2 <_vfiprintf_r+0x1da>
 8001510:	ab03      	add	r3, sp, #12
 8001512:	9300      	str	r3, [sp, #0]
 8001514:	462a      	mov	r2, r5
 8001516:	4b16      	ldr	r3, [pc, #88]	; (8001570 <_vfiprintf_r+0x258>)
 8001518:	a904      	add	r1, sp, #16
 800151a:	4630      	mov	r0, r6
 800151c:	f3af 8000 	nop.w
 8001520:	4607      	mov	r7, r0
 8001522:	1c78      	adds	r0, r7, #1
 8001524:	d1d6      	bne.n	80014d4 <_vfiprintf_r+0x1bc>
 8001526:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001528:	07d9      	lsls	r1, r3, #31
 800152a:	d405      	bmi.n	8001538 <_vfiprintf_r+0x220>
 800152c:	89ab      	ldrh	r3, [r5, #12]
 800152e:	059a      	lsls	r2, r3, #22
 8001530:	d402      	bmi.n	8001538 <_vfiprintf_r+0x220>
 8001532:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001534:	f7ff fe31 	bl	800119a <__retarget_lock_release_recursive>
 8001538:	89ab      	ldrh	r3, [r5, #12]
 800153a:	065b      	lsls	r3, r3, #25
 800153c:	f53f af12 	bmi.w	8001364 <_vfiprintf_r+0x4c>
 8001540:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001542:	e711      	b.n	8001368 <_vfiprintf_r+0x50>
 8001544:	ab03      	add	r3, sp, #12
 8001546:	9300      	str	r3, [sp, #0]
 8001548:	462a      	mov	r2, r5
 800154a:	4b09      	ldr	r3, [pc, #36]	; (8001570 <_vfiprintf_r+0x258>)
 800154c:	a904      	add	r1, sp, #16
 800154e:	4630      	mov	r0, r6
 8001550:	f000 f880 	bl	8001654 <_printf_i>
 8001554:	e7e4      	b.n	8001520 <_vfiprintf_r+0x208>
 8001556:	bf00      	nop
 8001558:	08001eec 	.word	0x08001eec
 800155c:	08001f0c 	.word	0x08001f0c
 8001560:	08001ecc 	.word	0x08001ecc
 8001564:	08001f2c 	.word	0x08001f2c
 8001568:	08001f36 	.word	0x08001f36
 800156c:	00000000 	.word	0x00000000
 8001570:	080012f3 	.word	0x080012f3
 8001574:	08001f32 	.word	0x08001f32

08001578 <_printf_common>:
 8001578:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800157c:	4616      	mov	r6, r2
 800157e:	4699      	mov	r9, r3
 8001580:	688a      	ldr	r2, [r1, #8]
 8001582:	690b      	ldr	r3, [r1, #16]
 8001584:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001588:	4293      	cmp	r3, r2
 800158a:	bfb8      	it	lt
 800158c:	4613      	movlt	r3, r2
 800158e:	6033      	str	r3, [r6, #0]
 8001590:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001594:	4607      	mov	r7, r0
 8001596:	460c      	mov	r4, r1
 8001598:	b10a      	cbz	r2, 800159e <_printf_common+0x26>
 800159a:	3301      	adds	r3, #1
 800159c:	6033      	str	r3, [r6, #0]
 800159e:	6823      	ldr	r3, [r4, #0]
 80015a0:	0699      	lsls	r1, r3, #26
 80015a2:	bf42      	ittt	mi
 80015a4:	6833      	ldrmi	r3, [r6, #0]
 80015a6:	3302      	addmi	r3, #2
 80015a8:	6033      	strmi	r3, [r6, #0]
 80015aa:	6825      	ldr	r5, [r4, #0]
 80015ac:	f015 0506 	ands.w	r5, r5, #6
 80015b0:	d106      	bne.n	80015c0 <_printf_common+0x48>
 80015b2:	f104 0a19 	add.w	sl, r4, #25
 80015b6:	68e3      	ldr	r3, [r4, #12]
 80015b8:	6832      	ldr	r2, [r6, #0]
 80015ba:	1a9b      	subs	r3, r3, r2
 80015bc:	42ab      	cmp	r3, r5
 80015be:	dc26      	bgt.n	800160e <_printf_common+0x96>
 80015c0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80015c4:	1e13      	subs	r3, r2, #0
 80015c6:	6822      	ldr	r2, [r4, #0]
 80015c8:	bf18      	it	ne
 80015ca:	2301      	movne	r3, #1
 80015cc:	0692      	lsls	r2, r2, #26
 80015ce:	d42b      	bmi.n	8001628 <_printf_common+0xb0>
 80015d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80015d4:	4649      	mov	r1, r9
 80015d6:	4638      	mov	r0, r7
 80015d8:	47c0      	blx	r8
 80015da:	3001      	adds	r0, #1
 80015dc:	d01e      	beq.n	800161c <_printf_common+0xa4>
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	68e5      	ldr	r5, [r4, #12]
 80015e2:	6832      	ldr	r2, [r6, #0]
 80015e4:	f003 0306 	and.w	r3, r3, #6
 80015e8:	2b04      	cmp	r3, #4
 80015ea:	bf08      	it	eq
 80015ec:	1aad      	subeq	r5, r5, r2
 80015ee:	68a3      	ldr	r3, [r4, #8]
 80015f0:	6922      	ldr	r2, [r4, #16]
 80015f2:	bf0c      	ite	eq
 80015f4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80015f8:	2500      	movne	r5, #0
 80015fa:	4293      	cmp	r3, r2
 80015fc:	bfc4      	itt	gt
 80015fe:	1a9b      	subgt	r3, r3, r2
 8001600:	18ed      	addgt	r5, r5, r3
 8001602:	2600      	movs	r6, #0
 8001604:	341a      	adds	r4, #26
 8001606:	42b5      	cmp	r5, r6
 8001608:	d11a      	bne.n	8001640 <_printf_common+0xc8>
 800160a:	2000      	movs	r0, #0
 800160c:	e008      	b.n	8001620 <_printf_common+0xa8>
 800160e:	2301      	movs	r3, #1
 8001610:	4652      	mov	r2, sl
 8001612:	4649      	mov	r1, r9
 8001614:	4638      	mov	r0, r7
 8001616:	47c0      	blx	r8
 8001618:	3001      	adds	r0, #1
 800161a:	d103      	bne.n	8001624 <_printf_common+0xac>
 800161c:	f04f 30ff 	mov.w	r0, #4294967295
 8001620:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001624:	3501      	adds	r5, #1
 8001626:	e7c6      	b.n	80015b6 <_printf_common+0x3e>
 8001628:	18e1      	adds	r1, r4, r3
 800162a:	1c5a      	adds	r2, r3, #1
 800162c:	2030      	movs	r0, #48	; 0x30
 800162e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001632:	4422      	add	r2, r4
 8001634:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001638:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800163c:	3302      	adds	r3, #2
 800163e:	e7c7      	b.n	80015d0 <_printf_common+0x58>
 8001640:	2301      	movs	r3, #1
 8001642:	4622      	mov	r2, r4
 8001644:	4649      	mov	r1, r9
 8001646:	4638      	mov	r0, r7
 8001648:	47c0      	blx	r8
 800164a:	3001      	adds	r0, #1
 800164c:	d0e6      	beq.n	800161c <_printf_common+0xa4>
 800164e:	3601      	adds	r6, #1
 8001650:	e7d9      	b.n	8001606 <_printf_common+0x8e>
	...

08001654 <_printf_i>:
 8001654:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001658:	7e0f      	ldrb	r7, [r1, #24]
 800165a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800165c:	2f78      	cmp	r7, #120	; 0x78
 800165e:	4691      	mov	r9, r2
 8001660:	4680      	mov	r8, r0
 8001662:	460c      	mov	r4, r1
 8001664:	469a      	mov	sl, r3
 8001666:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800166a:	d807      	bhi.n	800167c <_printf_i+0x28>
 800166c:	2f62      	cmp	r7, #98	; 0x62
 800166e:	d80a      	bhi.n	8001686 <_printf_i+0x32>
 8001670:	2f00      	cmp	r7, #0
 8001672:	f000 80d8 	beq.w	8001826 <_printf_i+0x1d2>
 8001676:	2f58      	cmp	r7, #88	; 0x58
 8001678:	f000 80a3 	beq.w	80017c2 <_printf_i+0x16e>
 800167c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001680:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001684:	e03a      	b.n	80016fc <_printf_i+0xa8>
 8001686:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800168a:	2b15      	cmp	r3, #21
 800168c:	d8f6      	bhi.n	800167c <_printf_i+0x28>
 800168e:	a101      	add	r1, pc, #4	; (adr r1, 8001694 <_printf_i+0x40>)
 8001690:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001694:	080016ed 	.word	0x080016ed
 8001698:	08001701 	.word	0x08001701
 800169c:	0800167d 	.word	0x0800167d
 80016a0:	0800167d 	.word	0x0800167d
 80016a4:	0800167d 	.word	0x0800167d
 80016a8:	0800167d 	.word	0x0800167d
 80016ac:	08001701 	.word	0x08001701
 80016b0:	0800167d 	.word	0x0800167d
 80016b4:	0800167d 	.word	0x0800167d
 80016b8:	0800167d 	.word	0x0800167d
 80016bc:	0800167d 	.word	0x0800167d
 80016c0:	0800180d 	.word	0x0800180d
 80016c4:	08001731 	.word	0x08001731
 80016c8:	080017ef 	.word	0x080017ef
 80016cc:	0800167d 	.word	0x0800167d
 80016d0:	0800167d 	.word	0x0800167d
 80016d4:	0800182f 	.word	0x0800182f
 80016d8:	0800167d 	.word	0x0800167d
 80016dc:	08001731 	.word	0x08001731
 80016e0:	0800167d 	.word	0x0800167d
 80016e4:	0800167d 	.word	0x0800167d
 80016e8:	080017f7 	.word	0x080017f7
 80016ec:	682b      	ldr	r3, [r5, #0]
 80016ee:	1d1a      	adds	r2, r3, #4
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	602a      	str	r2, [r5, #0]
 80016f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80016f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80016fc:	2301      	movs	r3, #1
 80016fe:	e0a3      	b.n	8001848 <_printf_i+0x1f4>
 8001700:	6820      	ldr	r0, [r4, #0]
 8001702:	6829      	ldr	r1, [r5, #0]
 8001704:	0606      	lsls	r6, r0, #24
 8001706:	f101 0304 	add.w	r3, r1, #4
 800170a:	d50a      	bpl.n	8001722 <_printf_i+0xce>
 800170c:	680e      	ldr	r6, [r1, #0]
 800170e:	602b      	str	r3, [r5, #0]
 8001710:	2e00      	cmp	r6, #0
 8001712:	da03      	bge.n	800171c <_printf_i+0xc8>
 8001714:	232d      	movs	r3, #45	; 0x2d
 8001716:	4276      	negs	r6, r6
 8001718:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800171c:	485e      	ldr	r0, [pc, #376]	; (8001898 <_printf_i+0x244>)
 800171e:	230a      	movs	r3, #10
 8001720:	e019      	b.n	8001756 <_printf_i+0x102>
 8001722:	680e      	ldr	r6, [r1, #0]
 8001724:	602b      	str	r3, [r5, #0]
 8001726:	f010 0f40 	tst.w	r0, #64	; 0x40
 800172a:	bf18      	it	ne
 800172c:	b236      	sxthne	r6, r6
 800172e:	e7ef      	b.n	8001710 <_printf_i+0xbc>
 8001730:	682b      	ldr	r3, [r5, #0]
 8001732:	6820      	ldr	r0, [r4, #0]
 8001734:	1d19      	adds	r1, r3, #4
 8001736:	6029      	str	r1, [r5, #0]
 8001738:	0601      	lsls	r1, r0, #24
 800173a:	d501      	bpl.n	8001740 <_printf_i+0xec>
 800173c:	681e      	ldr	r6, [r3, #0]
 800173e:	e002      	b.n	8001746 <_printf_i+0xf2>
 8001740:	0646      	lsls	r6, r0, #25
 8001742:	d5fb      	bpl.n	800173c <_printf_i+0xe8>
 8001744:	881e      	ldrh	r6, [r3, #0]
 8001746:	4854      	ldr	r0, [pc, #336]	; (8001898 <_printf_i+0x244>)
 8001748:	2f6f      	cmp	r7, #111	; 0x6f
 800174a:	bf0c      	ite	eq
 800174c:	2308      	moveq	r3, #8
 800174e:	230a      	movne	r3, #10
 8001750:	2100      	movs	r1, #0
 8001752:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001756:	6865      	ldr	r5, [r4, #4]
 8001758:	60a5      	str	r5, [r4, #8]
 800175a:	2d00      	cmp	r5, #0
 800175c:	bfa2      	ittt	ge
 800175e:	6821      	ldrge	r1, [r4, #0]
 8001760:	f021 0104 	bicge.w	r1, r1, #4
 8001764:	6021      	strge	r1, [r4, #0]
 8001766:	b90e      	cbnz	r6, 800176c <_printf_i+0x118>
 8001768:	2d00      	cmp	r5, #0
 800176a:	d04d      	beq.n	8001808 <_printf_i+0x1b4>
 800176c:	4615      	mov	r5, r2
 800176e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001772:	fb03 6711 	mls	r7, r3, r1, r6
 8001776:	5dc7      	ldrb	r7, [r0, r7]
 8001778:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800177c:	4637      	mov	r7, r6
 800177e:	42bb      	cmp	r3, r7
 8001780:	460e      	mov	r6, r1
 8001782:	d9f4      	bls.n	800176e <_printf_i+0x11a>
 8001784:	2b08      	cmp	r3, #8
 8001786:	d10b      	bne.n	80017a0 <_printf_i+0x14c>
 8001788:	6823      	ldr	r3, [r4, #0]
 800178a:	07de      	lsls	r6, r3, #31
 800178c:	d508      	bpl.n	80017a0 <_printf_i+0x14c>
 800178e:	6923      	ldr	r3, [r4, #16]
 8001790:	6861      	ldr	r1, [r4, #4]
 8001792:	4299      	cmp	r1, r3
 8001794:	bfde      	ittt	le
 8001796:	2330      	movle	r3, #48	; 0x30
 8001798:	f805 3c01 	strble.w	r3, [r5, #-1]
 800179c:	f105 35ff 	addle.w	r5, r5, #4294967295
 80017a0:	1b52      	subs	r2, r2, r5
 80017a2:	6122      	str	r2, [r4, #16]
 80017a4:	f8cd a000 	str.w	sl, [sp]
 80017a8:	464b      	mov	r3, r9
 80017aa:	aa03      	add	r2, sp, #12
 80017ac:	4621      	mov	r1, r4
 80017ae:	4640      	mov	r0, r8
 80017b0:	f7ff fee2 	bl	8001578 <_printf_common>
 80017b4:	3001      	adds	r0, #1
 80017b6:	d14c      	bne.n	8001852 <_printf_i+0x1fe>
 80017b8:	f04f 30ff 	mov.w	r0, #4294967295
 80017bc:	b004      	add	sp, #16
 80017be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80017c2:	4835      	ldr	r0, [pc, #212]	; (8001898 <_printf_i+0x244>)
 80017c4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80017c8:	6829      	ldr	r1, [r5, #0]
 80017ca:	6823      	ldr	r3, [r4, #0]
 80017cc:	f851 6b04 	ldr.w	r6, [r1], #4
 80017d0:	6029      	str	r1, [r5, #0]
 80017d2:	061d      	lsls	r5, r3, #24
 80017d4:	d514      	bpl.n	8001800 <_printf_i+0x1ac>
 80017d6:	07df      	lsls	r7, r3, #31
 80017d8:	bf44      	itt	mi
 80017da:	f043 0320 	orrmi.w	r3, r3, #32
 80017de:	6023      	strmi	r3, [r4, #0]
 80017e0:	b91e      	cbnz	r6, 80017ea <_printf_i+0x196>
 80017e2:	6823      	ldr	r3, [r4, #0]
 80017e4:	f023 0320 	bic.w	r3, r3, #32
 80017e8:	6023      	str	r3, [r4, #0]
 80017ea:	2310      	movs	r3, #16
 80017ec:	e7b0      	b.n	8001750 <_printf_i+0xfc>
 80017ee:	6823      	ldr	r3, [r4, #0]
 80017f0:	f043 0320 	orr.w	r3, r3, #32
 80017f4:	6023      	str	r3, [r4, #0]
 80017f6:	2378      	movs	r3, #120	; 0x78
 80017f8:	4828      	ldr	r0, [pc, #160]	; (800189c <_printf_i+0x248>)
 80017fa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80017fe:	e7e3      	b.n	80017c8 <_printf_i+0x174>
 8001800:	0659      	lsls	r1, r3, #25
 8001802:	bf48      	it	mi
 8001804:	b2b6      	uxthmi	r6, r6
 8001806:	e7e6      	b.n	80017d6 <_printf_i+0x182>
 8001808:	4615      	mov	r5, r2
 800180a:	e7bb      	b.n	8001784 <_printf_i+0x130>
 800180c:	682b      	ldr	r3, [r5, #0]
 800180e:	6826      	ldr	r6, [r4, #0]
 8001810:	6961      	ldr	r1, [r4, #20]
 8001812:	1d18      	adds	r0, r3, #4
 8001814:	6028      	str	r0, [r5, #0]
 8001816:	0635      	lsls	r5, r6, #24
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	d501      	bpl.n	8001820 <_printf_i+0x1cc>
 800181c:	6019      	str	r1, [r3, #0]
 800181e:	e002      	b.n	8001826 <_printf_i+0x1d2>
 8001820:	0670      	lsls	r0, r6, #25
 8001822:	d5fb      	bpl.n	800181c <_printf_i+0x1c8>
 8001824:	8019      	strh	r1, [r3, #0]
 8001826:	2300      	movs	r3, #0
 8001828:	6123      	str	r3, [r4, #16]
 800182a:	4615      	mov	r5, r2
 800182c:	e7ba      	b.n	80017a4 <_printf_i+0x150>
 800182e:	682b      	ldr	r3, [r5, #0]
 8001830:	1d1a      	adds	r2, r3, #4
 8001832:	602a      	str	r2, [r5, #0]
 8001834:	681d      	ldr	r5, [r3, #0]
 8001836:	6862      	ldr	r2, [r4, #4]
 8001838:	2100      	movs	r1, #0
 800183a:	4628      	mov	r0, r5
 800183c:	f7fe fcd0 	bl	80001e0 <memchr>
 8001840:	b108      	cbz	r0, 8001846 <_printf_i+0x1f2>
 8001842:	1b40      	subs	r0, r0, r5
 8001844:	6060      	str	r0, [r4, #4]
 8001846:	6863      	ldr	r3, [r4, #4]
 8001848:	6123      	str	r3, [r4, #16]
 800184a:	2300      	movs	r3, #0
 800184c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001850:	e7a8      	b.n	80017a4 <_printf_i+0x150>
 8001852:	6923      	ldr	r3, [r4, #16]
 8001854:	462a      	mov	r2, r5
 8001856:	4649      	mov	r1, r9
 8001858:	4640      	mov	r0, r8
 800185a:	47d0      	blx	sl
 800185c:	3001      	adds	r0, #1
 800185e:	d0ab      	beq.n	80017b8 <_printf_i+0x164>
 8001860:	6823      	ldr	r3, [r4, #0]
 8001862:	079b      	lsls	r3, r3, #30
 8001864:	d413      	bmi.n	800188e <_printf_i+0x23a>
 8001866:	68e0      	ldr	r0, [r4, #12]
 8001868:	9b03      	ldr	r3, [sp, #12]
 800186a:	4298      	cmp	r0, r3
 800186c:	bfb8      	it	lt
 800186e:	4618      	movlt	r0, r3
 8001870:	e7a4      	b.n	80017bc <_printf_i+0x168>
 8001872:	2301      	movs	r3, #1
 8001874:	4632      	mov	r2, r6
 8001876:	4649      	mov	r1, r9
 8001878:	4640      	mov	r0, r8
 800187a:	47d0      	blx	sl
 800187c:	3001      	adds	r0, #1
 800187e:	d09b      	beq.n	80017b8 <_printf_i+0x164>
 8001880:	3501      	adds	r5, #1
 8001882:	68e3      	ldr	r3, [r4, #12]
 8001884:	9903      	ldr	r1, [sp, #12]
 8001886:	1a5b      	subs	r3, r3, r1
 8001888:	42ab      	cmp	r3, r5
 800188a:	dcf2      	bgt.n	8001872 <_printf_i+0x21e>
 800188c:	e7eb      	b.n	8001866 <_printf_i+0x212>
 800188e:	2500      	movs	r5, #0
 8001890:	f104 0619 	add.w	r6, r4, #25
 8001894:	e7f5      	b.n	8001882 <_printf_i+0x22e>
 8001896:	bf00      	nop
 8001898:	08001f3d 	.word	0x08001f3d
 800189c:	08001f4e 	.word	0x08001f4e

080018a0 <_sbrk_r>:
 80018a0:	b538      	push	{r3, r4, r5, lr}
 80018a2:	4d06      	ldr	r5, [pc, #24]	; (80018bc <_sbrk_r+0x1c>)
 80018a4:	2300      	movs	r3, #0
 80018a6:	4604      	mov	r4, r0
 80018a8:	4608      	mov	r0, r1
 80018aa:	602b      	str	r3, [r5, #0]
 80018ac:	f7ff fac2 	bl	8000e34 <_sbrk>
 80018b0:	1c43      	adds	r3, r0, #1
 80018b2:	d102      	bne.n	80018ba <_sbrk_r+0x1a>
 80018b4:	682b      	ldr	r3, [r5, #0]
 80018b6:	b103      	cbz	r3, 80018ba <_sbrk_r+0x1a>
 80018b8:	6023      	str	r3, [r4, #0]
 80018ba:	bd38      	pop	{r3, r4, r5, pc}
 80018bc:	20000090 	.word	0x20000090

080018c0 <__sread>:
 80018c0:	b510      	push	{r4, lr}
 80018c2:	460c      	mov	r4, r1
 80018c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80018c8:	f000 fab2 	bl	8001e30 <_read_r>
 80018cc:	2800      	cmp	r0, #0
 80018ce:	bfab      	itete	ge
 80018d0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80018d2:	89a3      	ldrhlt	r3, [r4, #12]
 80018d4:	181b      	addge	r3, r3, r0
 80018d6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80018da:	bfac      	ite	ge
 80018dc:	6563      	strge	r3, [r4, #84]	; 0x54
 80018de:	81a3      	strhlt	r3, [r4, #12]
 80018e0:	bd10      	pop	{r4, pc}

080018e2 <__swrite>:
 80018e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80018e6:	461f      	mov	r7, r3
 80018e8:	898b      	ldrh	r3, [r1, #12]
 80018ea:	05db      	lsls	r3, r3, #23
 80018ec:	4605      	mov	r5, r0
 80018ee:	460c      	mov	r4, r1
 80018f0:	4616      	mov	r6, r2
 80018f2:	d505      	bpl.n	8001900 <__swrite+0x1e>
 80018f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80018f8:	2302      	movs	r3, #2
 80018fa:	2200      	movs	r2, #0
 80018fc:	f000 f9c8 	bl	8001c90 <_lseek_r>
 8001900:	89a3      	ldrh	r3, [r4, #12]
 8001902:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001906:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800190a:	81a3      	strh	r3, [r4, #12]
 800190c:	4632      	mov	r2, r6
 800190e:	463b      	mov	r3, r7
 8001910:	4628      	mov	r0, r5
 8001912:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001916:	f000 b869 	b.w	80019ec <_write_r>

0800191a <__sseek>:
 800191a:	b510      	push	{r4, lr}
 800191c:	460c      	mov	r4, r1
 800191e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001922:	f000 f9b5 	bl	8001c90 <_lseek_r>
 8001926:	1c43      	adds	r3, r0, #1
 8001928:	89a3      	ldrh	r3, [r4, #12]
 800192a:	bf15      	itete	ne
 800192c:	6560      	strne	r0, [r4, #84]	; 0x54
 800192e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001932:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001936:	81a3      	strheq	r3, [r4, #12]
 8001938:	bf18      	it	ne
 800193a:	81a3      	strhne	r3, [r4, #12]
 800193c:	bd10      	pop	{r4, pc}

0800193e <__sclose>:
 800193e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001942:	f000 b8d3 	b.w	8001aec <_close_r>
	...

08001948 <__swbuf_r>:
 8001948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800194a:	460e      	mov	r6, r1
 800194c:	4614      	mov	r4, r2
 800194e:	4605      	mov	r5, r0
 8001950:	b118      	cbz	r0, 800195a <__swbuf_r+0x12>
 8001952:	6983      	ldr	r3, [r0, #24]
 8001954:	b90b      	cbnz	r3, 800195a <__swbuf_r+0x12>
 8001956:	f7ff fb81 	bl	800105c <__sinit>
 800195a:	4b21      	ldr	r3, [pc, #132]	; (80019e0 <__swbuf_r+0x98>)
 800195c:	429c      	cmp	r4, r3
 800195e:	d12b      	bne.n	80019b8 <__swbuf_r+0x70>
 8001960:	686c      	ldr	r4, [r5, #4]
 8001962:	69a3      	ldr	r3, [r4, #24]
 8001964:	60a3      	str	r3, [r4, #8]
 8001966:	89a3      	ldrh	r3, [r4, #12]
 8001968:	071a      	lsls	r2, r3, #28
 800196a:	d52f      	bpl.n	80019cc <__swbuf_r+0x84>
 800196c:	6923      	ldr	r3, [r4, #16]
 800196e:	b36b      	cbz	r3, 80019cc <__swbuf_r+0x84>
 8001970:	6923      	ldr	r3, [r4, #16]
 8001972:	6820      	ldr	r0, [r4, #0]
 8001974:	1ac0      	subs	r0, r0, r3
 8001976:	6963      	ldr	r3, [r4, #20]
 8001978:	b2f6      	uxtb	r6, r6
 800197a:	4283      	cmp	r3, r0
 800197c:	4637      	mov	r7, r6
 800197e:	dc04      	bgt.n	800198a <__swbuf_r+0x42>
 8001980:	4621      	mov	r1, r4
 8001982:	4628      	mov	r0, r5
 8001984:	f000 f948 	bl	8001c18 <_fflush_r>
 8001988:	bb30      	cbnz	r0, 80019d8 <__swbuf_r+0x90>
 800198a:	68a3      	ldr	r3, [r4, #8]
 800198c:	3b01      	subs	r3, #1
 800198e:	60a3      	str	r3, [r4, #8]
 8001990:	6823      	ldr	r3, [r4, #0]
 8001992:	1c5a      	adds	r2, r3, #1
 8001994:	6022      	str	r2, [r4, #0]
 8001996:	701e      	strb	r6, [r3, #0]
 8001998:	6963      	ldr	r3, [r4, #20]
 800199a:	3001      	adds	r0, #1
 800199c:	4283      	cmp	r3, r0
 800199e:	d004      	beq.n	80019aa <__swbuf_r+0x62>
 80019a0:	89a3      	ldrh	r3, [r4, #12]
 80019a2:	07db      	lsls	r3, r3, #31
 80019a4:	d506      	bpl.n	80019b4 <__swbuf_r+0x6c>
 80019a6:	2e0a      	cmp	r6, #10
 80019a8:	d104      	bne.n	80019b4 <__swbuf_r+0x6c>
 80019aa:	4621      	mov	r1, r4
 80019ac:	4628      	mov	r0, r5
 80019ae:	f000 f933 	bl	8001c18 <_fflush_r>
 80019b2:	b988      	cbnz	r0, 80019d8 <__swbuf_r+0x90>
 80019b4:	4638      	mov	r0, r7
 80019b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80019b8:	4b0a      	ldr	r3, [pc, #40]	; (80019e4 <__swbuf_r+0x9c>)
 80019ba:	429c      	cmp	r4, r3
 80019bc:	d101      	bne.n	80019c2 <__swbuf_r+0x7a>
 80019be:	68ac      	ldr	r4, [r5, #8]
 80019c0:	e7cf      	b.n	8001962 <__swbuf_r+0x1a>
 80019c2:	4b09      	ldr	r3, [pc, #36]	; (80019e8 <__swbuf_r+0xa0>)
 80019c4:	429c      	cmp	r4, r3
 80019c6:	bf08      	it	eq
 80019c8:	68ec      	ldreq	r4, [r5, #12]
 80019ca:	e7ca      	b.n	8001962 <__swbuf_r+0x1a>
 80019cc:	4621      	mov	r1, r4
 80019ce:	4628      	mov	r0, r5
 80019d0:	f000 f81e 	bl	8001a10 <__swsetup_r>
 80019d4:	2800      	cmp	r0, #0
 80019d6:	d0cb      	beq.n	8001970 <__swbuf_r+0x28>
 80019d8:	f04f 37ff 	mov.w	r7, #4294967295
 80019dc:	e7ea      	b.n	80019b4 <__swbuf_r+0x6c>
 80019de:	bf00      	nop
 80019e0:	08001eec 	.word	0x08001eec
 80019e4:	08001f0c 	.word	0x08001f0c
 80019e8:	08001ecc 	.word	0x08001ecc

080019ec <_write_r>:
 80019ec:	b538      	push	{r3, r4, r5, lr}
 80019ee:	4d07      	ldr	r5, [pc, #28]	; (8001a0c <_write_r+0x20>)
 80019f0:	4604      	mov	r4, r0
 80019f2:	4608      	mov	r0, r1
 80019f4:	4611      	mov	r1, r2
 80019f6:	2200      	movs	r2, #0
 80019f8:	602a      	str	r2, [r5, #0]
 80019fa:	461a      	mov	r2, r3
 80019fc:	f7ff f9c9 	bl	8000d92 <_write>
 8001a00:	1c43      	adds	r3, r0, #1
 8001a02:	d102      	bne.n	8001a0a <_write_r+0x1e>
 8001a04:	682b      	ldr	r3, [r5, #0]
 8001a06:	b103      	cbz	r3, 8001a0a <_write_r+0x1e>
 8001a08:	6023      	str	r3, [r4, #0]
 8001a0a:	bd38      	pop	{r3, r4, r5, pc}
 8001a0c:	20000090 	.word	0x20000090

08001a10 <__swsetup_r>:
 8001a10:	4b32      	ldr	r3, [pc, #200]	; (8001adc <__swsetup_r+0xcc>)
 8001a12:	b570      	push	{r4, r5, r6, lr}
 8001a14:	681d      	ldr	r5, [r3, #0]
 8001a16:	4606      	mov	r6, r0
 8001a18:	460c      	mov	r4, r1
 8001a1a:	b125      	cbz	r5, 8001a26 <__swsetup_r+0x16>
 8001a1c:	69ab      	ldr	r3, [r5, #24]
 8001a1e:	b913      	cbnz	r3, 8001a26 <__swsetup_r+0x16>
 8001a20:	4628      	mov	r0, r5
 8001a22:	f7ff fb1b 	bl	800105c <__sinit>
 8001a26:	4b2e      	ldr	r3, [pc, #184]	; (8001ae0 <__swsetup_r+0xd0>)
 8001a28:	429c      	cmp	r4, r3
 8001a2a:	d10f      	bne.n	8001a4c <__swsetup_r+0x3c>
 8001a2c:	686c      	ldr	r4, [r5, #4]
 8001a2e:	89a3      	ldrh	r3, [r4, #12]
 8001a30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001a34:	0719      	lsls	r1, r3, #28
 8001a36:	d42c      	bmi.n	8001a92 <__swsetup_r+0x82>
 8001a38:	06dd      	lsls	r5, r3, #27
 8001a3a:	d411      	bmi.n	8001a60 <__swsetup_r+0x50>
 8001a3c:	2309      	movs	r3, #9
 8001a3e:	6033      	str	r3, [r6, #0]
 8001a40:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001a44:	81a3      	strh	r3, [r4, #12]
 8001a46:	f04f 30ff 	mov.w	r0, #4294967295
 8001a4a:	e03e      	b.n	8001aca <__swsetup_r+0xba>
 8001a4c:	4b25      	ldr	r3, [pc, #148]	; (8001ae4 <__swsetup_r+0xd4>)
 8001a4e:	429c      	cmp	r4, r3
 8001a50:	d101      	bne.n	8001a56 <__swsetup_r+0x46>
 8001a52:	68ac      	ldr	r4, [r5, #8]
 8001a54:	e7eb      	b.n	8001a2e <__swsetup_r+0x1e>
 8001a56:	4b24      	ldr	r3, [pc, #144]	; (8001ae8 <__swsetup_r+0xd8>)
 8001a58:	429c      	cmp	r4, r3
 8001a5a:	bf08      	it	eq
 8001a5c:	68ec      	ldreq	r4, [r5, #12]
 8001a5e:	e7e6      	b.n	8001a2e <__swsetup_r+0x1e>
 8001a60:	0758      	lsls	r0, r3, #29
 8001a62:	d512      	bpl.n	8001a8a <__swsetup_r+0x7a>
 8001a64:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001a66:	b141      	cbz	r1, 8001a7a <__swsetup_r+0x6a>
 8001a68:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001a6c:	4299      	cmp	r1, r3
 8001a6e:	d002      	beq.n	8001a76 <__swsetup_r+0x66>
 8001a70:	4630      	mov	r0, r6
 8001a72:	f000 f991 	bl	8001d98 <_free_r>
 8001a76:	2300      	movs	r3, #0
 8001a78:	6363      	str	r3, [r4, #52]	; 0x34
 8001a7a:	89a3      	ldrh	r3, [r4, #12]
 8001a7c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001a80:	81a3      	strh	r3, [r4, #12]
 8001a82:	2300      	movs	r3, #0
 8001a84:	6063      	str	r3, [r4, #4]
 8001a86:	6923      	ldr	r3, [r4, #16]
 8001a88:	6023      	str	r3, [r4, #0]
 8001a8a:	89a3      	ldrh	r3, [r4, #12]
 8001a8c:	f043 0308 	orr.w	r3, r3, #8
 8001a90:	81a3      	strh	r3, [r4, #12]
 8001a92:	6923      	ldr	r3, [r4, #16]
 8001a94:	b94b      	cbnz	r3, 8001aaa <__swsetup_r+0x9a>
 8001a96:	89a3      	ldrh	r3, [r4, #12]
 8001a98:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001a9c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001aa0:	d003      	beq.n	8001aaa <__swsetup_r+0x9a>
 8001aa2:	4621      	mov	r1, r4
 8001aa4:	4630      	mov	r0, r6
 8001aa6:	f000 f92b 	bl	8001d00 <__smakebuf_r>
 8001aaa:	89a0      	ldrh	r0, [r4, #12]
 8001aac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001ab0:	f010 0301 	ands.w	r3, r0, #1
 8001ab4:	d00a      	beq.n	8001acc <__swsetup_r+0xbc>
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	60a3      	str	r3, [r4, #8]
 8001aba:	6963      	ldr	r3, [r4, #20]
 8001abc:	425b      	negs	r3, r3
 8001abe:	61a3      	str	r3, [r4, #24]
 8001ac0:	6923      	ldr	r3, [r4, #16]
 8001ac2:	b943      	cbnz	r3, 8001ad6 <__swsetup_r+0xc6>
 8001ac4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001ac8:	d1ba      	bne.n	8001a40 <__swsetup_r+0x30>
 8001aca:	bd70      	pop	{r4, r5, r6, pc}
 8001acc:	0781      	lsls	r1, r0, #30
 8001ace:	bf58      	it	pl
 8001ad0:	6963      	ldrpl	r3, [r4, #20]
 8001ad2:	60a3      	str	r3, [r4, #8]
 8001ad4:	e7f4      	b.n	8001ac0 <__swsetup_r+0xb0>
 8001ad6:	2000      	movs	r0, #0
 8001ad8:	e7f7      	b.n	8001aca <__swsetup_r+0xba>
 8001ada:	bf00      	nop
 8001adc:	20000000 	.word	0x20000000
 8001ae0:	08001eec 	.word	0x08001eec
 8001ae4:	08001f0c 	.word	0x08001f0c
 8001ae8:	08001ecc 	.word	0x08001ecc

08001aec <_close_r>:
 8001aec:	b538      	push	{r3, r4, r5, lr}
 8001aee:	4d06      	ldr	r5, [pc, #24]	; (8001b08 <_close_r+0x1c>)
 8001af0:	2300      	movs	r3, #0
 8001af2:	4604      	mov	r4, r0
 8001af4:	4608      	mov	r0, r1
 8001af6:	602b      	str	r3, [r5, #0]
 8001af8:	f7ff f967 	bl	8000dca <_close>
 8001afc:	1c43      	adds	r3, r0, #1
 8001afe:	d102      	bne.n	8001b06 <_close_r+0x1a>
 8001b00:	682b      	ldr	r3, [r5, #0]
 8001b02:	b103      	cbz	r3, 8001b06 <_close_r+0x1a>
 8001b04:	6023      	str	r3, [r4, #0]
 8001b06:	bd38      	pop	{r3, r4, r5, pc}
 8001b08:	20000090 	.word	0x20000090

08001b0c <__sflush_r>:
 8001b0c:	898a      	ldrh	r2, [r1, #12]
 8001b0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b12:	4605      	mov	r5, r0
 8001b14:	0710      	lsls	r0, r2, #28
 8001b16:	460c      	mov	r4, r1
 8001b18:	d458      	bmi.n	8001bcc <__sflush_r+0xc0>
 8001b1a:	684b      	ldr	r3, [r1, #4]
 8001b1c:	2b00      	cmp	r3, #0
 8001b1e:	dc05      	bgt.n	8001b2c <__sflush_r+0x20>
 8001b20:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	dc02      	bgt.n	8001b2c <__sflush_r+0x20>
 8001b26:	2000      	movs	r0, #0
 8001b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001b2e:	2e00      	cmp	r6, #0
 8001b30:	d0f9      	beq.n	8001b26 <__sflush_r+0x1a>
 8001b32:	2300      	movs	r3, #0
 8001b34:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001b38:	682f      	ldr	r7, [r5, #0]
 8001b3a:	602b      	str	r3, [r5, #0]
 8001b3c:	d032      	beq.n	8001ba4 <__sflush_r+0x98>
 8001b3e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001b40:	89a3      	ldrh	r3, [r4, #12]
 8001b42:	075a      	lsls	r2, r3, #29
 8001b44:	d505      	bpl.n	8001b52 <__sflush_r+0x46>
 8001b46:	6863      	ldr	r3, [r4, #4]
 8001b48:	1ac0      	subs	r0, r0, r3
 8001b4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001b4c:	b10b      	cbz	r3, 8001b52 <__sflush_r+0x46>
 8001b4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b50:	1ac0      	subs	r0, r0, r3
 8001b52:	2300      	movs	r3, #0
 8001b54:	4602      	mov	r2, r0
 8001b56:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001b58:	6a21      	ldr	r1, [r4, #32]
 8001b5a:	4628      	mov	r0, r5
 8001b5c:	47b0      	blx	r6
 8001b5e:	1c43      	adds	r3, r0, #1
 8001b60:	89a3      	ldrh	r3, [r4, #12]
 8001b62:	d106      	bne.n	8001b72 <__sflush_r+0x66>
 8001b64:	6829      	ldr	r1, [r5, #0]
 8001b66:	291d      	cmp	r1, #29
 8001b68:	d82c      	bhi.n	8001bc4 <__sflush_r+0xb8>
 8001b6a:	4a2a      	ldr	r2, [pc, #168]	; (8001c14 <__sflush_r+0x108>)
 8001b6c:	40ca      	lsrs	r2, r1
 8001b6e:	07d6      	lsls	r6, r2, #31
 8001b70:	d528      	bpl.n	8001bc4 <__sflush_r+0xb8>
 8001b72:	2200      	movs	r2, #0
 8001b74:	6062      	str	r2, [r4, #4]
 8001b76:	04d9      	lsls	r1, r3, #19
 8001b78:	6922      	ldr	r2, [r4, #16]
 8001b7a:	6022      	str	r2, [r4, #0]
 8001b7c:	d504      	bpl.n	8001b88 <__sflush_r+0x7c>
 8001b7e:	1c42      	adds	r2, r0, #1
 8001b80:	d101      	bne.n	8001b86 <__sflush_r+0x7a>
 8001b82:	682b      	ldr	r3, [r5, #0]
 8001b84:	b903      	cbnz	r3, 8001b88 <__sflush_r+0x7c>
 8001b86:	6560      	str	r0, [r4, #84]	; 0x54
 8001b88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001b8a:	602f      	str	r7, [r5, #0]
 8001b8c:	2900      	cmp	r1, #0
 8001b8e:	d0ca      	beq.n	8001b26 <__sflush_r+0x1a>
 8001b90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001b94:	4299      	cmp	r1, r3
 8001b96:	d002      	beq.n	8001b9e <__sflush_r+0x92>
 8001b98:	4628      	mov	r0, r5
 8001b9a:	f000 f8fd 	bl	8001d98 <_free_r>
 8001b9e:	2000      	movs	r0, #0
 8001ba0:	6360      	str	r0, [r4, #52]	; 0x34
 8001ba2:	e7c1      	b.n	8001b28 <__sflush_r+0x1c>
 8001ba4:	6a21      	ldr	r1, [r4, #32]
 8001ba6:	2301      	movs	r3, #1
 8001ba8:	4628      	mov	r0, r5
 8001baa:	47b0      	blx	r6
 8001bac:	1c41      	adds	r1, r0, #1
 8001bae:	d1c7      	bne.n	8001b40 <__sflush_r+0x34>
 8001bb0:	682b      	ldr	r3, [r5, #0]
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d0c4      	beq.n	8001b40 <__sflush_r+0x34>
 8001bb6:	2b1d      	cmp	r3, #29
 8001bb8:	d001      	beq.n	8001bbe <__sflush_r+0xb2>
 8001bba:	2b16      	cmp	r3, #22
 8001bbc:	d101      	bne.n	8001bc2 <__sflush_r+0xb6>
 8001bbe:	602f      	str	r7, [r5, #0]
 8001bc0:	e7b1      	b.n	8001b26 <__sflush_r+0x1a>
 8001bc2:	89a3      	ldrh	r3, [r4, #12]
 8001bc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001bc8:	81a3      	strh	r3, [r4, #12]
 8001bca:	e7ad      	b.n	8001b28 <__sflush_r+0x1c>
 8001bcc:	690f      	ldr	r7, [r1, #16]
 8001bce:	2f00      	cmp	r7, #0
 8001bd0:	d0a9      	beq.n	8001b26 <__sflush_r+0x1a>
 8001bd2:	0793      	lsls	r3, r2, #30
 8001bd4:	680e      	ldr	r6, [r1, #0]
 8001bd6:	bf08      	it	eq
 8001bd8:	694b      	ldreq	r3, [r1, #20]
 8001bda:	600f      	str	r7, [r1, #0]
 8001bdc:	bf18      	it	ne
 8001bde:	2300      	movne	r3, #0
 8001be0:	eba6 0807 	sub.w	r8, r6, r7
 8001be4:	608b      	str	r3, [r1, #8]
 8001be6:	f1b8 0f00 	cmp.w	r8, #0
 8001bea:	dd9c      	ble.n	8001b26 <__sflush_r+0x1a>
 8001bec:	6a21      	ldr	r1, [r4, #32]
 8001bee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001bf0:	4643      	mov	r3, r8
 8001bf2:	463a      	mov	r2, r7
 8001bf4:	4628      	mov	r0, r5
 8001bf6:	47b0      	blx	r6
 8001bf8:	2800      	cmp	r0, #0
 8001bfa:	dc06      	bgt.n	8001c0a <__sflush_r+0xfe>
 8001bfc:	89a3      	ldrh	r3, [r4, #12]
 8001bfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c02:	81a3      	strh	r3, [r4, #12]
 8001c04:	f04f 30ff 	mov.w	r0, #4294967295
 8001c08:	e78e      	b.n	8001b28 <__sflush_r+0x1c>
 8001c0a:	4407      	add	r7, r0
 8001c0c:	eba8 0800 	sub.w	r8, r8, r0
 8001c10:	e7e9      	b.n	8001be6 <__sflush_r+0xda>
 8001c12:	bf00      	nop
 8001c14:	20400001 	.word	0x20400001

08001c18 <_fflush_r>:
 8001c18:	b538      	push	{r3, r4, r5, lr}
 8001c1a:	690b      	ldr	r3, [r1, #16]
 8001c1c:	4605      	mov	r5, r0
 8001c1e:	460c      	mov	r4, r1
 8001c20:	b913      	cbnz	r3, 8001c28 <_fflush_r+0x10>
 8001c22:	2500      	movs	r5, #0
 8001c24:	4628      	mov	r0, r5
 8001c26:	bd38      	pop	{r3, r4, r5, pc}
 8001c28:	b118      	cbz	r0, 8001c32 <_fflush_r+0x1a>
 8001c2a:	6983      	ldr	r3, [r0, #24]
 8001c2c:	b90b      	cbnz	r3, 8001c32 <_fflush_r+0x1a>
 8001c2e:	f7ff fa15 	bl	800105c <__sinit>
 8001c32:	4b14      	ldr	r3, [pc, #80]	; (8001c84 <_fflush_r+0x6c>)
 8001c34:	429c      	cmp	r4, r3
 8001c36:	d11b      	bne.n	8001c70 <_fflush_r+0x58>
 8001c38:	686c      	ldr	r4, [r5, #4]
 8001c3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d0ef      	beq.n	8001c22 <_fflush_r+0xa>
 8001c42:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001c44:	07d0      	lsls	r0, r2, #31
 8001c46:	d404      	bmi.n	8001c52 <_fflush_r+0x3a>
 8001c48:	0599      	lsls	r1, r3, #22
 8001c4a:	d402      	bmi.n	8001c52 <_fflush_r+0x3a>
 8001c4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c4e:	f7ff faa3 	bl	8001198 <__retarget_lock_acquire_recursive>
 8001c52:	4628      	mov	r0, r5
 8001c54:	4621      	mov	r1, r4
 8001c56:	f7ff ff59 	bl	8001b0c <__sflush_r>
 8001c5a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c5c:	07da      	lsls	r2, r3, #31
 8001c5e:	4605      	mov	r5, r0
 8001c60:	d4e0      	bmi.n	8001c24 <_fflush_r+0xc>
 8001c62:	89a3      	ldrh	r3, [r4, #12]
 8001c64:	059b      	lsls	r3, r3, #22
 8001c66:	d4dd      	bmi.n	8001c24 <_fflush_r+0xc>
 8001c68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c6a:	f7ff fa96 	bl	800119a <__retarget_lock_release_recursive>
 8001c6e:	e7d9      	b.n	8001c24 <_fflush_r+0xc>
 8001c70:	4b05      	ldr	r3, [pc, #20]	; (8001c88 <_fflush_r+0x70>)
 8001c72:	429c      	cmp	r4, r3
 8001c74:	d101      	bne.n	8001c7a <_fflush_r+0x62>
 8001c76:	68ac      	ldr	r4, [r5, #8]
 8001c78:	e7df      	b.n	8001c3a <_fflush_r+0x22>
 8001c7a:	4b04      	ldr	r3, [pc, #16]	; (8001c8c <_fflush_r+0x74>)
 8001c7c:	429c      	cmp	r4, r3
 8001c7e:	bf08      	it	eq
 8001c80:	68ec      	ldreq	r4, [r5, #12]
 8001c82:	e7da      	b.n	8001c3a <_fflush_r+0x22>
 8001c84:	08001eec 	.word	0x08001eec
 8001c88:	08001f0c 	.word	0x08001f0c
 8001c8c:	08001ecc 	.word	0x08001ecc

08001c90 <_lseek_r>:
 8001c90:	b538      	push	{r3, r4, r5, lr}
 8001c92:	4d07      	ldr	r5, [pc, #28]	; (8001cb0 <_lseek_r+0x20>)
 8001c94:	4604      	mov	r4, r0
 8001c96:	4608      	mov	r0, r1
 8001c98:	4611      	mov	r1, r2
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	602a      	str	r2, [r5, #0]
 8001c9e:	461a      	mov	r2, r3
 8001ca0:	f7ff f8ba 	bl	8000e18 <_lseek>
 8001ca4:	1c43      	adds	r3, r0, #1
 8001ca6:	d102      	bne.n	8001cae <_lseek_r+0x1e>
 8001ca8:	682b      	ldr	r3, [r5, #0]
 8001caa:	b103      	cbz	r3, 8001cae <_lseek_r+0x1e>
 8001cac:	6023      	str	r3, [r4, #0]
 8001cae:	bd38      	pop	{r3, r4, r5, pc}
 8001cb0:	20000090 	.word	0x20000090

08001cb4 <__swhatbuf_r>:
 8001cb4:	b570      	push	{r4, r5, r6, lr}
 8001cb6:	460e      	mov	r6, r1
 8001cb8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001cbc:	2900      	cmp	r1, #0
 8001cbe:	b096      	sub	sp, #88	; 0x58
 8001cc0:	4614      	mov	r4, r2
 8001cc2:	461d      	mov	r5, r3
 8001cc4:	da08      	bge.n	8001cd8 <__swhatbuf_r+0x24>
 8001cc6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001cca:	2200      	movs	r2, #0
 8001ccc:	602a      	str	r2, [r5, #0]
 8001cce:	061a      	lsls	r2, r3, #24
 8001cd0:	d410      	bmi.n	8001cf4 <__swhatbuf_r+0x40>
 8001cd2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001cd6:	e00e      	b.n	8001cf6 <__swhatbuf_r+0x42>
 8001cd8:	466a      	mov	r2, sp
 8001cda:	f000 f8bb 	bl	8001e54 <_fstat_r>
 8001cde:	2800      	cmp	r0, #0
 8001ce0:	dbf1      	blt.n	8001cc6 <__swhatbuf_r+0x12>
 8001ce2:	9a01      	ldr	r2, [sp, #4]
 8001ce4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001ce8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001cec:	425a      	negs	r2, r3
 8001cee:	415a      	adcs	r2, r3
 8001cf0:	602a      	str	r2, [r5, #0]
 8001cf2:	e7ee      	b.n	8001cd2 <__swhatbuf_r+0x1e>
 8001cf4:	2340      	movs	r3, #64	; 0x40
 8001cf6:	2000      	movs	r0, #0
 8001cf8:	6023      	str	r3, [r4, #0]
 8001cfa:	b016      	add	sp, #88	; 0x58
 8001cfc:	bd70      	pop	{r4, r5, r6, pc}
	...

08001d00 <__smakebuf_r>:
 8001d00:	898b      	ldrh	r3, [r1, #12]
 8001d02:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001d04:	079d      	lsls	r5, r3, #30
 8001d06:	4606      	mov	r6, r0
 8001d08:	460c      	mov	r4, r1
 8001d0a:	d507      	bpl.n	8001d1c <__smakebuf_r+0x1c>
 8001d0c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001d10:	6023      	str	r3, [r4, #0]
 8001d12:	6123      	str	r3, [r4, #16]
 8001d14:	2301      	movs	r3, #1
 8001d16:	6163      	str	r3, [r4, #20]
 8001d18:	b002      	add	sp, #8
 8001d1a:	bd70      	pop	{r4, r5, r6, pc}
 8001d1c:	ab01      	add	r3, sp, #4
 8001d1e:	466a      	mov	r2, sp
 8001d20:	f7ff ffc8 	bl	8001cb4 <__swhatbuf_r>
 8001d24:	9900      	ldr	r1, [sp, #0]
 8001d26:	4605      	mov	r5, r0
 8001d28:	4630      	mov	r0, r6
 8001d2a:	f7ff fa57 	bl	80011dc <_malloc_r>
 8001d2e:	b948      	cbnz	r0, 8001d44 <__smakebuf_r+0x44>
 8001d30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001d34:	059a      	lsls	r2, r3, #22
 8001d36:	d4ef      	bmi.n	8001d18 <__smakebuf_r+0x18>
 8001d38:	f023 0303 	bic.w	r3, r3, #3
 8001d3c:	f043 0302 	orr.w	r3, r3, #2
 8001d40:	81a3      	strh	r3, [r4, #12]
 8001d42:	e7e3      	b.n	8001d0c <__smakebuf_r+0xc>
 8001d44:	4b0d      	ldr	r3, [pc, #52]	; (8001d7c <__smakebuf_r+0x7c>)
 8001d46:	62b3      	str	r3, [r6, #40]	; 0x28
 8001d48:	89a3      	ldrh	r3, [r4, #12]
 8001d4a:	6020      	str	r0, [r4, #0]
 8001d4c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d50:	81a3      	strh	r3, [r4, #12]
 8001d52:	9b00      	ldr	r3, [sp, #0]
 8001d54:	6163      	str	r3, [r4, #20]
 8001d56:	9b01      	ldr	r3, [sp, #4]
 8001d58:	6120      	str	r0, [r4, #16]
 8001d5a:	b15b      	cbz	r3, 8001d74 <__smakebuf_r+0x74>
 8001d5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001d60:	4630      	mov	r0, r6
 8001d62:	f000 f889 	bl	8001e78 <_isatty_r>
 8001d66:	b128      	cbz	r0, 8001d74 <__smakebuf_r+0x74>
 8001d68:	89a3      	ldrh	r3, [r4, #12]
 8001d6a:	f023 0303 	bic.w	r3, r3, #3
 8001d6e:	f043 0301 	orr.w	r3, r3, #1
 8001d72:	81a3      	strh	r3, [r4, #12]
 8001d74:	89a0      	ldrh	r0, [r4, #12]
 8001d76:	4305      	orrs	r5, r0
 8001d78:	81a5      	strh	r5, [r4, #12]
 8001d7a:	e7cd      	b.n	8001d18 <__smakebuf_r+0x18>
 8001d7c:	08000ff5 	.word	0x08000ff5

08001d80 <__malloc_lock>:
 8001d80:	4801      	ldr	r0, [pc, #4]	; (8001d88 <__malloc_lock+0x8>)
 8001d82:	f7ff ba09 	b.w	8001198 <__retarget_lock_acquire_recursive>
 8001d86:	bf00      	nop
 8001d88:	20000084 	.word	0x20000084

08001d8c <__malloc_unlock>:
 8001d8c:	4801      	ldr	r0, [pc, #4]	; (8001d94 <__malloc_unlock+0x8>)
 8001d8e:	f7ff ba04 	b.w	800119a <__retarget_lock_release_recursive>
 8001d92:	bf00      	nop
 8001d94:	20000084 	.word	0x20000084

08001d98 <_free_r>:
 8001d98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001d9a:	2900      	cmp	r1, #0
 8001d9c:	d044      	beq.n	8001e28 <_free_r+0x90>
 8001d9e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001da2:	9001      	str	r0, [sp, #4]
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	f1a1 0404 	sub.w	r4, r1, #4
 8001daa:	bfb8      	it	lt
 8001dac:	18e4      	addlt	r4, r4, r3
 8001dae:	f7ff ffe7 	bl	8001d80 <__malloc_lock>
 8001db2:	4a1e      	ldr	r2, [pc, #120]	; (8001e2c <_free_r+0x94>)
 8001db4:	9801      	ldr	r0, [sp, #4]
 8001db6:	6813      	ldr	r3, [r2, #0]
 8001db8:	b933      	cbnz	r3, 8001dc8 <_free_r+0x30>
 8001dba:	6063      	str	r3, [r4, #4]
 8001dbc:	6014      	str	r4, [r2, #0]
 8001dbe:	b003      	add	sp, #12
 8001dc0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001dc4:	f7ff bfe2 	b.w	8001d8c <__malloc_unlock>
 8001dc8:	42a3      	cmp	r3, r4
 8001dca:	d908      	bls.n	8001dde <_free_r+0x46>
 8001dcc:	6825      	ldr	r5, [r4, #0]
 8001dce:	1961      	adds	r1, r4, r5
 8001dd0:	428b      	cmp	r3, r1
 8001dd2:	bf01      	itttt	eq
 8001dd4:	6819      	ldreq	r1, [r3, #0]
 8001dd6:	685b      	ldreq	r3, [r3, #4]
 8001dd8:	1949      	addeq	r1, r1, r5
 8001dda:	6021      	streq	r1, [r4, #0]
 8001ddc:	e7ed      	b.n	8001dba <_free_r+0x22>
 8001dde:	461a      	mov	r2, r3
 8001de0:	685b      	ldr	r3, [r3, #4]
 8001de2:	b10b      	cbz	r3, 8001de8 <_free_r+0x50>
 8001de4:	42a3      	cmp	r3, r4
 8001de6:	d9fa      	bls.n	8001dde <_free_r+0x46>
 8001de8:	6811      	ldr	r1, [r2, #0]
 8001dea:	1855      	adds	r5, r2, r1
 8001dec:	42a5      	cmp	r5, r4
 8001dee:	d10b      	bne.n	8001e08 <_free_r+0x70>
 8001df0:	6824      	ldr	r4, [r4, #0]
 8001df2:	4421      	add	r1, r4
 8001df4:	1854      	adds	r4, r2, r1
 8001df6:	42a3      	cmp	r3, r4
 8001df8:	6011      	str	r1, [r2, #0]
 8001dfa:	d1e0      	bne.n	8001dbe <_free_r+0x26>
 8001dfc:	681c      	ldr	r4, [r3, #0]
 8001dfe:	685b      	ldr	r3, [r3, #4]
 8001e00:	6053      	str	r3, [r2, #4]
 8001e02:	4421      	add	r1, r4
 8001e04:	6011      	str	r1, [r2, #0]
 8001e06:	e7da      	b.n	8001dbe <_free_r+0x26>
 8001e08:	d902      	bls.n	8001e10 <_free_r+0x78>
 8001e0a:	230c      	movs	r3, #12
 8001e0c:	6003      	str	r3, [r0, #0]
 8001e0e:	e7d6      	b.n	8001dbe <_free_r+0x26>
 8001e10:	6825      	ldr	r5, [r4, #0]
 8001e12:	1961      	adds	r1, r4, r5
 8001e14:	428b      	cmp	r3, r1
 8001e16:	bf04      	itt	eq
 8001e18:	6819      	ldreq	r1, [r3, #0]
 8001e1a:	685b      	ldreq	r3, [r3, #4]
 8001e1c:	6063      	str	r3, [r4, #4]
 8001e1e:	bf04      	itt	eq
 8001e20:	1949      	addeq	r1, r1, r5
 8001e22:	6021      	streq	r1, [r4, #0]
 8001e24:	6054      	str	r4, [r2, #4]
 8001e26:	e7ca      	b.n	8001dbe <_free_r+0x26>
 8001e28:	b003      	add	sp, #12
 8001e2a:	bd30      	pop	{r4, r5, pc}
 8001e2c:	20000088 	.word	0x20000088

08001e30 <_read_r>:
 8001e30:	b538      	push	{r3, r4, r5, lr}
 8001e32:	4d07      	ldr	r5, [pc, #28]	; (8001e50 <_read_r+0x20>)
 8001e34:	4604      	mov	r4, r0
 8001e36:	4608      	mov	r0, r1
 8001e38:	4611      	mov	r1, r2
 8001e3a:	2200      	movs	r2, #0
 8001e3c:	602a      	str	r2, [r5, #0]
 8001e3e:	461a      	mov	r2, r3
 8001e40:	f7fe ff8a 	bl	8000d58 <_read>
 8001e44:	1c43      	adds	r3, r0, #1
 8001e46:	d102      	bne.n	8001e4e <_read_r+0x1e>
 8001e48:	682b      	ldr	r3, [r5, #0]
 8001e4a:	b103      	cbz	r3, 8001e4e <_read_r+0x1e>
 8001e4c:	6023      	str	r3, [r4, #0]
 8001e4e:	bd38      	pop	{r3, r4, r5, pc}
 8001e50:	20000090 	.word	0x20000090

08001e54 <_fstat_r>:
 8001e54:	b538      	push	{r3, r4, r5, lr}
 8001e56:	4d07      	ldr	r5, [pc, #28]	; (8001e74 <_fstat_r+0x20>)
 8001e58:	2300      	movs	r3, #0
 8001e5a:	4604      	mov	r4, r0
 8001e5c:	4608      	mov	r0, r1
 8001e5e:	4611      	mov	r1, r2
 8001e60:	602b      	str	r3, [r5, #0]
 8001e62:	f7fe ffbe 	bl	8000de2 <_fstat>
 8001e66:	1c43      	adds	r3, r0, #1
 8001e68:	d102      	bne.n	8001e70 <_fstat_r+0x1c>
 8001e6a:	682b      	ldr	r3, [r5, #0]
 8001e6c:	b103      	cbz	r3, 8001e70 <_fstat_r+0x1c>
 8001e6e:	6023      	str	r3, [r4, #0]
 8001e70:	bd38      	pop	{r3, r4, r5, pc}
 8001e72:	bf00      	nop
 8001e74:	20000090 	.word	0x20000090

08001e78 <_isatty_r>:
 8001e78:	b538      	push	{r3, r4, r5, lr}
 8001e7a:	4d06      	ldr	r5, [pc, #24]	; (8001e94 <_isatty_r+0x1c>)
 8001e7c:	2300      	movs	r3, #0
 8001e7e:	4604      	mov	r4, r0
 8001e80:	4608      	mov	r0, r1
 8001e82:	602b      	str	r3, [r5, #0]
 8001e84:	f7fe ffbd 	bl	8000e02 <_isatty>
 8001e88:	1c43      	adds	r3, r0, #1
 8001e8a:	d102      	bne.n	8001e92 <_isatty_r+0x1a>
 8001e8c:	682b      	ldr	r3, [r5, #0]
 8001e8e:	b103      	cbz	r3, 8001e92 <_isatty_r+0x1a>
 8001e90:	6023      	str	r3, [r4, #0]
 8001e92:	bd38      	pop	{r3, r4, r5, pc}
 8001e94:	20000090 	.word	0x20000090

08001e98 <_init>:
 8001e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e9a:	bf00      	nop
 8001e9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001e9e:	bc08      	pop	{r3}
 8001ea0:	469e      	mov	lr, r3
 8001ea2:	4770      	bx	lr

08001ea4 <_fini>:
 8001ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ea6:	bf00      	nop
 8001ea8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001eaa:	bc08      	pop	{r3}
 8001eac:	469e      	mov	lr, r3
 8001eae:	4770      	bx	lr
